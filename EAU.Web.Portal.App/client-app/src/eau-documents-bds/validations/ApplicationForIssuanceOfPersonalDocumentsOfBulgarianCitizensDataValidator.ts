import { EAUBaseValidator, ResourceHelpers, resourceManager, ErrMsgCodesConstants } from "eau-core";
import { DocumentFormValidationContext, IdentityDocumentType, PersonDataExtendedValidator } from "eau-documents";
import { ApplicationForIssuanceOfPersonalDocumentsOfBulgarianCitizensDataVM } from "../models/ModelsAutoGenerated";

export class ApplicationForIssuanceOfPersonalDocumentsOfBulgarianCitizensDataValidator
    extends EAUBaseValidator<ApplicationForIssuanceOfPersonalDocumentsOfBulgarianCitizensDataVM, DocumentFormValidationContext> {

    constructor() {
        super();

        this.ruleFor(m => m.phone).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new ApplicationForIssuanceOfPersonalDocumentsOfBulgarianCitizensDataVM(), 'phone'))

        this.ruleFor(m => m.phone).isValidPhone().withMessage(resourceManager.getResourceByKey("DOC_GL_WRONG_PHONE_NUMBER_E"))
        this.ruleFor(m => m.person).setValidator(new PersonDataExtendedValidator()).when(x => x.identificationDocuments && x.identificationDocuments.length > 0 && x.identificationDocuments[0] != IdentityDocumentType.DrivingLicense);

        this.ruleFor(m => m.abroadAddress).match(/^[а-яА-Яa-zA-Z\s+\d+~@#$%^&*()_{}|"':>=|!<.,/\\?;-]+$/g).withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldValidationCyrillicLatinNumbersSymbols,
            new ApplicationForIssuanceOfPersonalDocumentsOfBulgarianCitizensDataVM(), 'abroadAddress'));
    }
}