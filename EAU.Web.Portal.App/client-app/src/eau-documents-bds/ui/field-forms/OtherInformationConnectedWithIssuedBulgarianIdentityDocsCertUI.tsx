import { moduleContext, ObjectHelper } from "cnsys-core";
import { BaseProps } from "cnsys-ui-react";
import { EAUBaseComponent, ValidationSummary, ValidationSummaryStrategy } from "eau-core";
import React from "react";
import { DataContainsInCertificateNomenclature, OtherInformationConnectedWithIssuedBulgarianIdentityDocumentsVM } from "../../models/ModelsAutoGenerated";

export class OtherInformationConnectedWithIssuedBulgarianIdentityDocsCertUI extends EAUBaseComponent<BaseProps, OtherInformationConnectedWithIssuedBulgarianIdentityDocumentsVM> {

    constructor(props: BaseProps) {
        super(props);
        //Bind
        this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);
    }

    private handleCheckBoxChange(e: any) {
        if (e.target.checked) {

            const checkedValue = +e.target.value;
            if (ObjectHelper.isNullOrUndefined(this.model.includsDataInCertificate)) {
                this.model.includsDataInCertificate = [];
            }

            if (!ObjectHelper.isNullOrUndefined(this.model.includsDataInCertificate) && !this.model.includsDataInCertificate.includes(checkedValue)) {
                this.model.includsDataInCertificate.push(checkedValue);
            }

        } else {
            this.model.includsDataInCertificate = this.model.includsDataInCertificate.filter(x => x != e.target.value)
        }
    }

    renderEdit(): JSX.Element {
        return (
            <>
                <div className="form-group">
                    <label className="form-control-label" htmlFor="">{moduleContext.resourceManager.getResourceByKey('DOC_BDS_DocumentToBeIssuedFor_otherInformationConnectedWithIssuedBulgarianIdentityDocuments_L')}</label>
                    <ValidationSummary model={this.model} strategy={ValidationSummaryStrategy.excludeAllExcept} propNames={['includsDataInCertificate']} />
                    <div className="row">
                        <div className="form-group col-12">
                            <div className="custom-control custom-checkbox">
                                <input
                                    id={`includsDataInCertificate_${DataContainsInCertificateNomenclature.PermanentAddress}`}
                                    type="checkbox"
                                    name={"includsDataInCertificate"}
                                    className="custom-control-input"
                                    value={DataContainsInCertificateNomenclature.PermanentAddress}
                                    checked={!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.PermanentAddress) ? true : false}
                                    onChange={this.handleCheckBoxChange}
                                />
                                <label htmlFor={`includsDataInCertificate_${DataContainsInCertificateNomenclature.PermanentAddress}`} className="custom-control-label">
                                    {moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForIssuanceOfPersonalDocumentsOfBulgarianCitizensData_permanentAddress_personalCard_L')}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div className="row">
                        <div className="form-group col-sm-6">
                            <div className="custom-control custom-checkbox">
                                <input
                                    id={`includsDataInCertificate_${DataContainsInCertificateNomenclature.CyrillicNames}`}
                                    type="checkbox"
                                    name={"includsDataInCertificate"}
                                    className="custom-control-input"
                                    value={DataContainsInCertificateNomenclature.CyrillicNames}
                                    checked={!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.CyrillicNames) ? true : false}
                                    onChange={this.handleCheckBoxChange}
                                />
                                <label htmlFor={`includsDataInCertificate_${DataContainsInCertificateNomenclature.CyrillicNames}`} className="custom-control-label">
                                    {moduleContext.resourceManager.getResourceByKey('DOC_BDS_PersonIdentificationData_names_L')}
                                </label>
                            </div>
                        </div>
                        <div className="form-group col-sm-6">
                            <div className="custom-control custom-checkbox">
                                <input
                                    id={`includsDataInCertificate_${DataContainsInCertificateNomenclature.LatinNames}`}
                                    type="checkbox"
                                    name={"includsDataInCertificate"}
                                    className="custom-control-input"
                                    value={DataContainsInCertificateNomenclature.LatinNames}
                                    checked={!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.LatinNames) ? true : false}
                                    onChange={this.handleCheckBoxChange}
                                />
                                <label htmlFor={`includsDataInCertificate_${DataContainsInCertificateNomenclature.LatinNames}`} className="custom-control-label">
                                    {moduleContext.resourceManager.getResourceByKey('DOC_BDS_PersonIdentificationData_namesLatin_L')}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div className="row">
                        <div className="form-group col-sm-6">
                            <div className="custom-control custom-checkbox">
                                <input
                                    id={`includsDataInCertificate_${DataContainsInCertificateNomenclature.IssuingDate}`}
                                    type="checkbox"
                                    name={"includsDataInCertificate"}
                                    className="custom-control-input"
                                    value={DataContainsInCertificateNomenclature.IssuingDate}
                                    checked={!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.IssuingDate) ? true : false}
                                    onChange={this.handleCheckBoxChange}
                                />
                                <label htmlFor={`includsDataInCertificate_${DataContainsInCertificateNomenclature.IssuingDate}`} className="custom-control-label">
                                    {moduleContext.resourceManager.getResourceByKey('DOC_BDS_IdentityDocumentData_identitityIssueDate_L')}
                                </label>
                            </div>
                        </div>
                        <div className="form-group col-sm-6">
                            <div className="custom-control custom-checkbox">
                                <input
                                    id={`includsDataInCertificate_${DataContainsInCertificateNomenclature.ExpiryDate}`}
                                    type="checkbox"
                                    name={"includsDataInCertificate"}
                                    className="custom-control-input"
                                    value={DataContainsInCertificateNomenclature.ExpiryDate}
                                    checked={!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.ExpiryDate) ? true : false}
                                    onChange={this.handleCheckBoxChange}
                                />
                                <label htmlFor={`includsDataInCertificate_${DataContainsInCertificateNomenclature.ExpiryDate}`} className="custom-control-label">
                                    {moduleContext.resourceManager.getResourceByKey('DOC_BDS_IdentityDocumentData_identitityExpireDate_L')}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div className="row">
                        <div className="form-group col-12">
                            <div className="custom-control custom-checkbox">
                                <input
                                    id={`includsDataInCertificate_${DataContainsInCertificateNomenclature.CurrentDocStatusAndPublicationDate}`}
                                    type="checkbox"
                                    name={"includsDataInCertificate"}
                                    className="custom-control-input"
                                    value={DataContainsInCertificateNomenclature.CurrentDocStatusAndPublicationDate}
                                    checked={!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.CurrentDocStatusAndPublicationDate) ? true : false}
                                    onChange={this.handleCheckBoxChange}
                                />
                                <label htmlFor={`includsDataInCertificate_${DataContainsInCertificateNomenclature.CurrentDocStatusAndPublicationDate}`} className="custom-control-label">
                                    {moduleContext.resourceManager.getResourceByKey('DOC_BDS_IdentityDocumentData_identityDocumentStatus_announcementDate_L')}
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </>
        )
    }

    renderDisplay(): JSX.Element {
        return (
            <fieldset className="fields-group">

                <h4 className="form-control-label">{this.getResource("DOC_BDS_DocumentToBeIssuedFor_otherInformationConnectedWithIssuedBulgarianIdentityDocuments_L")}</h4>
                
                <ValidationSummary model={this.model} strategy={ValidationSummaryStrategy.excludeAllExcept} propNames={['includsDataInCertificate']} />

                <div className="row">
                    <div className="form-group col-12">
                        {(!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.PermanentAddress)) &&
                            <p className="field-text check-item check-success">
                                {moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForIssuanceOfPersonalDocumentsOfBulgarianCitizensData_permanentAddress_personalCard_L')}
                            </p>
                        }
                        {(!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.CyrillicNames)) &&
                            < p className="field-text check-item check-success">
                                {moduleContext.resourceManager.getResourceByKey('DOC_BDS_PersonIdentificationData_names_L')}
                            </p>
                        }
                        {(!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.LatinNames)) &&
                            < p className="field-text check-item check-success">
                                {moduleContext.resourceManager.getResourceByKey('DOC_BDS_PersonIdentificationData_namesLatin_L')}
                            </p>
                        }
                        {(!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.IssuingDate)) &&
                            < p className="field-text check-item check-success">
                                {moduleContext.resourceManager.getResourceByKey('DOC_BDS_IdentityDocumentData_identitityIssueDate_L')}
                            </p>
                        }
                        {(!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.ExpiryDate)) &&
                            < p className="field-text check-item check-success">
                                {moduleContext.resourceManager.getResourceByKey('DOC_BDS_IdentityDocumentData_identitityExpireDate_L')}
                            </p>
                        }
                        {(!ObjectHelper.isArrayNullOrEmpty(this.model.includsDataInCertificate) && this.model.includsDataInCertificate.includes(DataContainsInCertificateNomenclature.CurrentDocStatusAndPublicationDate)) &&
                            < p className="field-text check-item check-success">
                                {moduleContext.resourceManager.getResourceByKey('DOC_BDS_IdentityDocumentData_identityDocumentStatus_announcementDate_L')}
                            </p>
                        }
                    </div>
                </div>
            </fieldset>
        )
    }
}