import { moduleContext, ObjectHelper } from "cnsys-core";
import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlRequiredLabel, EAUBaseComponent, ResourceHelpers } from "eau-core";
import { FieldFormUI, GraoAddressUI } from "eau-documents";
import React from "react";
import { BulgarianIdentityDocumentTypes, DeclarationUndurArticle17Data, IssuingBgPersonalDocumentReasonNomenclature } from "../../models/ModelsAutoGenerated";

export class DeclarationUnderArticle17DataUI extends EAUBaseComponent<BaseProps, DeclarationUndurArticle17Data> {

    renderEdit(): JSX.Element {
        return <>
            <FieldFormUI title={moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_typePersonalDocument_L')}>
                <div className="row">
                    <div className="form-group col-12">
                        <p className="field-text">{!ObjectHelper.isNullOrUndefined(this.model.docType) ? ResourceHelpers.getResourceByEmun(this.model.docType, BulgarianIdentityDocumentTypes).toUpperCase() : ''}</p>
                    </div>
                </div>
            </FieldFormUI>

            <FieldFormUI title={moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_applicantData_L')}>
                <div className="row">
                    {!ObjectHelper.isNullOrUndefined(this.model.permanentAddress) ?
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_PermanentАddress_L')}</h4>
                            <GraoAddressUI {...this.bind(m => m.permanentAddress)} viewMode={ViewMode.Display} />
                        </div>
                        : !ObjectHelper.isNullOrUndefined(this.model.presentAddress) &&
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_PresentАddress_L')}</h4>
                            <GraoAddressUI {...this.bind(m => m.presentAddress)} viewMode={ViewMode.Display} />
                        </div>
                    }
                </div>
            </FieldFormUI>

            <FieldFormUI title={moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_dataLossStealingDamageDestruction_personalDocument_L')}>
                <div className="row">
                    <div className="form-group col-12">
                        <fieldset>
                            <legend className="form-control-label required-field">{moduleContext.resourceManager.getResourceByKey('DOC_BDS_IssuingBgPersonalDocumentReasonData_reason_L')}</legend>
                            {this.radioButtonListFor(m => m.reasonData.reason, ResourceHelpers.getSelectListItemsForEnum(IssuingBgPersonalDocumentReasonNomenclature))}
                        </fieldset>
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(x => x.reasonData.factsAndCircumstances, null, attributesClassFormControlRequiredLabel)}
                        {this.textAreaFor(x => x.reasonData.factsAndCircumstances, null, 3)}
                        {this.inlineHelpFor(m => m.reasonData.factsAndCircumstances, 'DOC_GL_ApplicationForDeclaration_FACTS_CIRCUMSTANCES_I')}
                    </div>
                </div>
            </FieldFormUI>
        </>
    }

    renderDisplay(): JSX.Element {
        return <>
            <FieldFormUI title={moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_typePersonalDocument_L')}>
                <div className="row">
                    <div className="form-group col-12">
                        <p className="field-text">{!ObjectHelper.isNullOrUndefined(this.model.docType) ? ResourceHelpers.getResourceByEmun(this.model.docType, BulgarianIdentityDocumentTypes).toUpperCase() : ''}</p>
                    </div>
                </div>
            </FieldFormUI>

            <FieldFormUI title={moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_applicantData_L')}>
                <div className="row">
                    {!ObjectHelper.isNullOrUndefined(this.model.permanentAddress) ?
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_PermanentАddress_L')}</h4>
                            <GraoAddressUI {...this.bind(m => m.permanentAddress)} viewMode={ViewMode.Display} />
                        </div>
                        : !ObjectHelper.isNullOrUndefined(this.model.presentAddress) &&
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_PresentАddress_L')}</h4>
                            <GraoAddressUI {...this.bind(m => m.presentAddress)} viewMode={ViewMode.Display} />
                        </div>
                    }
                </div>
            </FieldFormUI>

            <FieldFormUI title={moduleContext.resourceManager.getResourceByKey('DOC_BDS_ApplicationForDeclaration_dataLossStealingDamageDestruction_personalDocument_L')}>
                <div className="row">
                    <div className="form-group col-12">
                        <h4 className="form-control-label">{moduleContext.resourceManager.getResourceByKey('DOC_BDS_IssuingBgPersonalDocumentReasonData_reason_L')}</h4>
                        <p className="field-text">{ResourceHelpers.getResourceByEmun(this.model.reasonData.reason, IssuingBgPersonalDocumentReasonNomenclature)}</p>
                        {this.propertyErrorNestedModelsDispleyFor(this.model.reasonData, "reason")}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-12">
                        <h4 className="form-control-label">{moduleContext.resourceManager.getResourceByKey('DOC_BDS_IssuingBgPersonalDocumentReasonData_factsAndCircumstances_L')}</h4>
                        {this.textDisplay(this.model.reasonData.factsAndCircumstances, this.model.reasonData, "factsAndCircumstances", true)}
                    </div>
                </div>
            </FieldFormUI>
        </>
    }
}