import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlReqired, EAUBaseComponent } from "eau-core";
import { CitizenshipUI, DocumentMustServeToUI, FieldFormUI, GraoAddressUI, withDocumentFormManager, ApplicationFormManagerProps, ElectronicServiceAuthorQualityType } from "eau-documents";
import { observer } from "mobx-react";
import React from "react";
import { ApplicationForIssuingDocumentForForeignersDataVM } from "../../models/ModelsAutoGenerated";

export const attributesClassFormControlLabelAndRequiredF = { className: 'form-control-label required-field' };

interface ApplicationForIssuingDocumentForForeignersDataUIProps extends BaseProps, ApplicationFormManagerProps {
}

@observer export class ApplicationForIssuingDocumentForForeignersDataUIImpl
    extends EAUBaseComponent<ApplicationForIssuingDocumentForForeignersDataUIProps, ApplicationForIssuingDocumentForForeignersDataVM> {
    private selectedAuthorQuality: ElectronicServiceAuthorQualityType;

    constructor(props: ApplicationForIssuingDocumentForForeignersDataUIProps) {
        super(props);

        this.selectedAuthorQuality = this.props.documentFormManager.getSelectedAuthorQuality;
    }

    renderEdit(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m)} required >
                    <FieldFormUI headerType={"h4"}>
                        <div className="row">
                            <div className="form-group col-sm-6">
                                {this.labelFor(m => m.citizenship.countryGRAOCode, null, attributesClassFormControlLabelAndRequiredF)}
                                <CitizenshipUI {...this.bind(m => m.citizenship)} />
                            </div>
                            <div className="form-group col-sm-6">
                                {this.labelFor(m => m.birthDate, null, attributesClassFormControlLabelAndRequiredF)}
                                <div className="auto-complete-container">
                                    {this.textBoxFor(m => m.birthDate, attributesClassFormControlReqired)}
                                    {this.inlineHelpFor(m => m.birthDate, 'DOC_GL_DateFormat_I')}
                                </div>
                            </div>
                        </div>
                    </FieldFormUI>
                    <FieldFormUI title={this.getResource("DOC_GL_PERMANENT_CURRENT_ADDRESS_L")} headerType={"h4"}>
                        <GraoAddressUI {...this.bind(m => m.address)} viewMode={this.selectedAuthorQuality == ElectronicServiceAuthorQualityType.Personal ? ViewMode.Display : ViewMode.Edit} />
                    </FieldFormUI>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.certificateFor)} required={true}>
                    {this.textAreaFor(m => m.certificateFor)}
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.documentMustServeTo)} required={true}>
                    <DocumentMustServeToUI {...this.bind(m => m.documentMustServeTo)} />
                </FieldFormUI>
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m)}>
                    <div className="row">
                        <div className="col-12 form-group">
                            <h4 className="form-control-label">{this.getResourceByProperty(m => m.address)}</h4>
                            <GraoAddressUI {...this.bind(m => m.address)} />
                        </div>
                    </div>
                    <div className="row">
                        <div className="col-4 form-group">
                            <h4 className="form-control-label">{this.getResourceByProperty(m => m.citizenship)}</h4>
                            <CitizenshipUI {...this.bind(m => m.citizenship)} />
                        </div>
                        <div className="col-8 form-group">
                            <h4 className="form-control-label">{this.getResourceByProperty(m => m.birthDate)}</h4>
                            {this.textDisplayFor(m => m.birthDate)}
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.certificateFor)}>
                    <div className="row">
                        <div className="col-12 form-group">
                            {this.textDisplayFor(m => m.certificateFor)}
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.documentMustServeTo)}>
                    <div className="row">
                        <div className="col-12 form-group">
                            <DocumentMustServeToUI {...this.bind(m => m.documentMustServeTo)} />
                        </div>
                    </div>
                </FieldFormUI>
            </>
        );
    }
}

export const ApplicationForIssuingDocumentForForeignersDataUI = withDocumentFormManager(ApplicationForIssuingDocumentForForeignersDataUIImpl);