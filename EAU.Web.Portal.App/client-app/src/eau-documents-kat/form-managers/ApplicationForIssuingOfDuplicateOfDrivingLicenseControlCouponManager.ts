import { ResourceHelpers } from 'eau-core';
import { ApplicationFormManagerBase, DocumentFormValidationContext, Section } from 'eau-documents';
import { ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponVM } from '../models/ModelsAutoGenerated';
import { ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataUI } from '../ui/section-forms/ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataUI';
import { ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataVMValidator } from '../validations/ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataVMValidator';

export class ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponManager extends ApplicationFormManagerBase<ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponVM>{

    //#region ApplicationFormManagerBase

    createDocument(obj: any): ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponVM {
        return new ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponVM(obj);
    }

    //#endregion

    protected initDocumentForm() {
        super.initDocumentForm();

        this.additionalData.showMessageForNonPaidSlip = true;  
    }

    protected createSections(validationContext: DocumentFormValidationContext): Section[] {
        var sections = super.createSections(validationContext);

        var circumstances = new Section();
        circumstances.code = "circumstances";
        circumstances.title = ResourceHelpers.getResourceByProperty(m => m.circumstances, this.documentForm);
        circumstances.form = this.documentForm.circumstances;
        circumstances.formUICmp = ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataUI;
        circumstances.validator = new ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataVMValidator();
        circumstances.validator.setValidationContext(validationContext);
        circumstances.validate = () => this.validateSection(circumstances);

        sections.splice(1, 0, circumstances);

        return sections;
    }
}