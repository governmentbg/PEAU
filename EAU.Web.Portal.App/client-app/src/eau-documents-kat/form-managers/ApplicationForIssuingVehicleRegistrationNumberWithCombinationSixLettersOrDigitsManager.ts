import { action } from "mobx";
import { ResourceHelpers } from 'eau-core';
import { ApplicationFormManagerBase, DocumentFormValidationContext, Section, ElectronicServiceAuthorQualityType, PoliceDepartment, ApplicationType } from 'eau-documents';
import { ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsVM } from '../models/ModelsAutoGenerated';
import { ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsDataUI } from '../ui/section-forms/ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsDataUI';
import { ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsDataValidator } from '../validations/ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsDataValidator';

export class ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsManager extends ApplicationFormManagerBase<ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsVM>{

    //#region ApplicationFormManagerBase

    createDocument(obj: any): ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsVM {
        return new ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsVM(obj);
    }

    //#endregion

    protected initDocumentForm() {
        super.initDocumentForm();

        this.additionalData.showWarningForNonPaidSlip = true;
    }

    protected createSections(validationContext: DocumentFormValidationContext): Section[] {
        var sections = super.createSections(validationContext);

        var circumstances = new Section();
        circumstances.code = "circumstances";
        circumstances.title = ResourceHelpers.getResourceByProperty(m => m.circumstances, this.documentForm);
        circumstances.form = this.documentForm.circumstances;
        circumstances.formUICmp = ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsDataUI;
        circumstances.validator = new ApplicationForIssuingVehicleRegistrationNumberWithCombinationSixLettersOrDigitsDataValidator();
        circumstances.validator.setValidationContext(validationContext);
        circumstances.validate = () => this.validateSection(circumstances);

        sections.splice(1, 0, circumstances);

        return sections;
    }

    @action public changeAuthorQuality(qualityType: ElectronicServiceAuthorQualityType) {
        super.changeAuthorQuality(qualityType);

        if (qualityType == ElectronicServiceAuthorQualityType.Personal) {
            if (this.documentForm.circumstances.authorPoliceDepartment) {
                this.documentForm.circumstances.issuingPoliceDepartment = new PoliceDepartment();
                this.documentForm.circumstances.issuingPoliceDepartment.policeDepartmentCode = this.documentForm.circumstances.authorPoliceDepartment.policeDepartmentCode;
                this.documentForm.circumstances.issuingPoliceDepartment.policeDepartmentName = this.documentForm.circumstances.authorPoliceDepartment.policeDepartmentName;
            }
            else
                this.documentForm.circumstances.issuingPoliceDepartment = new PoliceDepartment();
        } else {
            if (this.documentForm.electronicAdministrativeServiceHeader.applicationType == ApplicationType.AppForFirstReg)
                this.documentForm.circumstances.issuingPoliceDepartment = new PoliceDepartment();
        }

        if (this.documentForm.electronicAdministrativeServiceHeader.applicationType == ApplicationType.AppForFirstReg) {
            this.documentForm.circumstances.provinceCode = undefined;
            this.documentForm.circumstances.wishedRegistrationNumber = undefined;
        }
    }
}