import { EAUBaseValidator, ErrMsgCodesConstants, ResourceHelpers } from "eau-core";
import { DocumentFormValidationContext, PersonIdentifierValidator } from "eau-documents";
import { OwnerVM, PersonEntityChoiceType } from "../models/ModelsAutoGenerated";

export class VehicleOwnersValidator extends EAUBaseValidator<OwnerVM, DocumentFormValidationContext> {
    constructor() {
        super();

        //type
        this.ruleFor(m => m.type).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new OwnerVM(), 'type'));

        //personIdentifier
        this.ruleFor(m => m.personIdentifier).setValidator(new PersonIdentifierValidator())
            .when(m => m.type == PersonEntityChoiceType.Person);

        //entityIdentifier
        this.ruleFor(m => m.entityIdentifier).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new OwnerVM(), 'entityIdentifier'))
            .when(m => m.type == PersonEntityChoiceType.Entity);

        this.ruleFor(m => m.entityIdentifier)
            .isValidBULSTAT()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.InvalidBULSTATAndEIK, new OwnerVM(), 'entityIdentifier'))
            .when(m => m.type == PersonEntityChoiceType.Entity);
    }
}