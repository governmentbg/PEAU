import { EAUBaseValidator, ErrMsgCodesConstants, ResourceHelpers } from "eau-core";
import { DocumentFormValidationContext } from "eau-documents";
import { ApplicationForIssuingDocumentofVehicleOwnershipDataRegistrationAndMakeVM } from "../models/ModelsAutoGenerated";
import { moduleContext } from "../ModuleContext";

export class ApplicationForIssuingDocumentofVehicleOwnershipDataRegistrationAndMakeVMValidator extends EAUBaseValidator<ApplicationForIssuingDocumentofVehicleOwnershipDataRegistrationAndMakeVM, DocumentFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.makeModel).notEmpty().when(m => m.areFieldsRequired)
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new ApplicationForIssuingDocumentofVehicleOwnershipDataRegistrationAndMakeVM(), 'makeModel'));

        this.ruleFor(m => m.makeModel).match(/^[А-Яа-яa-zA-Z0-9\s\.]+$/)
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.AllowedLettersAndNumsAndDotOnly, new ApplicationForIssuingDocumentofVehicleOwnershipDataRegistrationAndMakeVM(), 'makeModel'));   

        this.ruleFor(m => m.registrationNumber).notEmpty().when(m => m.areFieldsRequired)
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new ApplicationForIssuingDocumentofVehicleOwnershipDataRegistrationAndMakeVM(), 'registrationNumber'));

        this.ruleFor(m => m.registrationNumber).matches("^[А-Я0-9]+$")
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldCanContainsOnly, new ApplicationForIssuingDocumentofVehicleOwnershipDataRegistrationAndMakeVM(), 'registrationNumber', moduleContext.resourceManager.getResourceByKey(ErrMsgCodesConstants.CharsAllowedCyrillicCapitalOnlyAndNums)));   
    }
}