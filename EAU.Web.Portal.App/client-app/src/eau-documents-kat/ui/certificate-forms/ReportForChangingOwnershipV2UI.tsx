import { ArrayHelper, ObjectHelper } from "cnsys-core";
import { BaseProps } from "cnsys-ui-react";
import { Constants, EAUBaseComponent } from "eau-core";
import { DocumentURIUI, FieldFormUI } from "eau-documents";
import React from "react";
import { PersonEntityDataVM, ReportForChangingOwnershipV2ChangeVM, ReportForChangingOwnershipV2ChangeWithBarterVM, ReportForChangingOwnershipV2VehicleDataVM, ReportForChangingOwnershipV2VM, VehicleRegistrationData } from "../../models/ModelsAutoGenerated";
import { EntityDataUI, PersonDataUI } from "../field-forms";
import { DisplayStatusesUI } from "../field-forms/DisplayStatusesUI";
import { GuaranteeFundUI } from "../field-forms/GuaranteeFundUI";
import { PeriodicTechnicalCheckUI } from "../field-forms/PeriodicTechnicalCheckUI";

export class ReportForChangingOwnershipV2UI extends EAUBaseComponent<BaseProps, ReportForChangingOwnershipV2VM> {

    render(): JSX.Element {
        return (
            <>
                {
                    this.model.documentURI && <div className="row">
                        <div className="form-group col-12">
                            <h2 className="page-subtitle">{this.getResource("GL_URI_L")} <DocumentURIUI {...this.bind(m => m.documentURI)} /></h2>
                            <p className="page-date">{this.getResource("GL_DATE_L")} {this.dateDisplayFor(this.model.documentReceiptOrSigningDate, Constants.DATE_FORMATS.date)}</p>
                        </div>
                    </div>
                }
                {this.model.vehicleRegistrationChange != null && this.model.vehicleRegistrationChange.length > 1 && <div className="alert alert-warning"><p>{this.getResource("DOC_KAT_MORE_THAN_ONE_PPS_NO_PRINT_FOR_SRMPS_I")}</p></div>}
                {this.model.vehicleRegistrationChangeWithBarter != null && <div className="alert alert-warning"><p>{this.getResource("DOC_KAT_MORE_THAN_ONE_PPS_NO_PRINT_FOR_SRMPS_I")}</p></div>}
                {
                    this.model.vehicleRegistrationChange && this.model.vehicleRegistrationChange.length > 0
                        ? this.model.vehicleRegistrationChange.map((vehicleChangeData, index: number) => {
                            return <ReportForChangingOwnershipV2ChangeUI key={index} {...this.bindArrayElement(x => x.vehicleRegistrationChange[index], [index])} />
                        })
                        : null
                }
                {this.model.vehicleRegistrationChangeWithBarter && <ReportForChangingOwnershipV2ChangeWithBarterUI {...this.bind(x => x.vehicleRegistrationChangeWithBarter)} />}
            </>
        )
    }
}

export class ReportForChangingOwnershipV2ChangeUI extends EAUBaseComponent<BaseProps, ReportForChangingOwnershipV2ChangeVM> {

    private sectionId: string;

    constructor(props: BaseProps) {
        super(props);

        this.sectionId = ObjectHelper.newGuid();
    }

    render(): JSX.Element {
        return (
            <>
                {this.model.vehicleRegistrationData && <ReportForChangingOwnershipV2VehicleDataUI {...this.bind(x => x.vehicleRegistrationData)} />}
                {
                    this.model.currentOwners && this.model.currentOwners.length > 0 && <section className="interactive-container" aria-labelledby={this.sectionId}>
                        <div className="interactive-container__content">
                            <h2 className="section-title section-title--report" id={this.sectionId}>{this.getResourceByProperty(x => x.currentOwners)}</h2>
                            {
                                ArrayHelper.queryable.from(this.model.currentOwners).count(x => x.person != null) > 0
                                && <fieldset className="fields-group">
                                    <legend>
                                        <h3 className="field-title">{this.getResource("DOC_KAT_PERSON_DATA_NAIF_NRBLD_L")}</h3>
                                    </legend>
                                    <ul className="list-filed">
                                        {
                                            this.model.currentOwners.map((currentOwner, index) => <li key={index} className="list-filed__item" role="group">
                                                <ReportForChangingOwnershipV2PersonEntityDataUI choiceType={"Person"}  {...this.bindArrayElement(x => x.currentOwners[index], [index])} />
                                            </li>)
                                        }
                                    </ul>
                                </fieldset>
                            }
                            {
                                ArrayHelper.queryable.from(this.model.currentOwners).count(x => x.entity != null) > 0
                                && <fieldset className="fields-group">
                                    <legend>
                                        <h3 className="field-title">{this.getResource("DOC_KAT_ENTITY_DATA_CR_BULSTAT_L")}</h3>
                                    </legend>
                                    <ul className="list-filed">
                                        {
                                            this.model.currentOwners.map((currentOwner, index) => <li key={index} className="list-filed__item" role="group">
                                                <ReportForChangingOwnershipV2PersonEntityDataUI choiceType={"Entity"}  {...this.bindArrayElement(x => x.currentOwners[index], [index])} />
                                            </li>)
                                        }
                                    </ul>
                                </fieldset>
                            }
                        </div>
                    </section>
                }
                {
                    this.model.newOwners && this.model.newOwners.length > 0 && <section className="interactive-container" aria-labelledby={this.sectionId + "_2"}>
                        <div className="interactive-container__content">
                            <h2 className="section-title section-title--report" id={this.sectionId + "_2"}>{this.getResourceByProperty(x => x.newOwners)}</h2>
                            {
                                ArrayHelper.queryable.from(this.model.newOwners).count(x => x.person != null) > 0
                                && <fieldset className="fields-group">
                                    <legend>
                                        <h3 className="field-title">{this.getResource("DOC_KAT_PERSON_DATA_NAIF_NRBLD_L")}</h3>
                                    </legend>
                                    <ul className="list-filed">
                                        {
                                            this.model.newOwners.map((owner, index) => <li key={index} className="list-filed__item" role="group">
                                                <ReportForChangingOwnershipV2PersonEntityDataUI choiceType={"Person"}  {...this.bindArrayElement(x => x.newOwners[index], [index])} />
                                            </li>)
                                        }
                                    </ul>
                                </fieldset>
                            }
                            {
                                ArrayHelper.queryable.from(this.model.newOwners).count(x => x.entity != null) > 0
                                && <fieldset className="fields-group">
                                    <legend>
                                        <h3 className="field-title">{this.getResource("DOC_KAT_ENTITY_DATA_CR_BULSTAT_L")}</h3>
                                    </legend>
                                    <ul className="list-filed">
                                        {
                                            this.model.newOwners.map((owner, index) => <li key={index} className="list-filed__item" role="group">
                                                <ReportForChangingOwnershipV2PersonEntityDataUI choiceType={"Entity"}  {...this.bindArrayElement(x => x.newOwners[index], [index])} />
                                            </li>)
                                        }
                                    </ul>
                                </fieldset>
                            }
                        </div>
                    </section>
                }
            </>
        )
    }
}

export class ReportForChangingOwnershipV2ChangeWithBarterUI extends EAUBaseComponent<BaseProps, ReportForChangingOwnershipV2ChangeWithBarterVM> {

    render(): JSX.Element {
        return (
            <>
                {this.model.firstVehicleData && <ReportForChangingOwnershipV2VehicleDataUI {...this.bind(x => x.firstVehicleData)} />}
                {
                    this.model.firstVehicleOwners && this.model.firstVehicleOwners.length > 0 && <section className="interactive-container" aria-labelledby="SECTION-TITLE-2">
                        <div className="interactive-container__content">
                            <h2 className="section-title section-title--report" id="SECTION-TITLE-2">{this.getResource("DOC_KAT_ReportForChangingOwnershipV2ChangeWithBarter_FIRST_PPS_L")}</h2>
                            {
                                ArrayHelper.queryable.from(this.model.firstVehicleOwners).count(x => x.person != null) > 0 && <fieldset className="fields-group">
                                    <legend>
                                        <h3 className="field-title">{this.getResource("DOC_KAT_PERSON_DATA_NAIF_NRBLD_L")}</h3>
                                    </legend>
                                    <ul className="list-filed">
                                        {
                                            this.model.firstVehicleOwners.map((owner, index) => <li key={index} className="list-filed__item" role="group">
                                                <ReportForChangingOwnershipV2PersonEntityDataUI choiceType={"Person"}  {...this.bindArrayElement(x => x.firstVehicleOwners[index], [index])} />
                                            </li>)
                                        }
                                    </ul>
                                </fieldset> 
                            }
                            {
                                ArrayHelper.queryable.from(this.model.firstVehicleOwners).count(x => x.entity != null) > 0
                                && <fieldset className="fields-group">
                                    <legend>
                                        <h3 className="field-title">{this.getResource("DOC_KAT_ENTITY_DATA_CR_BULSTAT_L")}</h3>
                                    </legend>
                                    <ul className="list-filed">
                                        {
                                            this.model.firstVehicleOwners.map((owner, index) => <li key={index} className="list-filed__item" role="group">
                                                <ReportForChangingOwnershipV2PersonEntityDataUI choiceType={"Entity"}  {...this.bindArrayElement(x => x.firstVehicleOwners[index], [index])} />
                                            </li>)
                                        }
                                    </ul>
                                </fieldset>
                            }
                        </div>
                    </section>
                }
                {this.model.secondVehicleData && <ReportForChangingOwnershipV2VehicleDataUI {...this.bind(x => x.secondVehicleData)} />}
                {
                    this.model.secondVehicleOwners && this.model.secondVehicleOwners.length > 0 && <section className="interactive-container" aria-labelledby="SECTION-TITLE-3">
                        <div className="interactive-container__content">
                            <h2 className="section-title section-title--report" id="SECTION-TITLE-3">{this.getResource("DOC_KAT_ReportForChangingOwnershipV2ChangeWithBarter_SECOND_PPS_L")}</h2>
                            {
                                ArrayHelper.queryable.from(this.model.secondVehicleOwners).count(x => x.person != null) > 0 && <fieldset className="fields-group">
                                    <legend>
                                        <h3 className="field-title">{this.getResource("DOC_KAT_PERSON_DATA_NAIF_NRBLD_L")}</h3>
                                    </legend>
                                    <ul className="list-filed">
                                        {
                                            this.model.secondVehicleOwners.map((owner, index) => <li key={index} className="list-filed__item" role="group">
                                                <ReportForChangingOwnershipV2PersonEntityDataUI choiceType={"Person"}  {...this.bindArrayElement(x => x.secondVehicleOwners[index], [index])} />
                                            </li>)
                                        }
                                    </ul>
                                </fieldset>
                            }
                            {
                                ArrayHelper.queryable.from(this.model.secondVehicleOwners).count(x => x.entity != null) > 0
                                && <fieldset className="fields-group">
                                    <legend>
                                        <h3 className="field-title">{this.getResource("DOC_KAT_ENTITY_DATA_CR_BULSTAT_L")}</h3>
                                    </legend>
                                    <ul className="list-filed">
                                        {
                                            this.model.secondVehicleOwners.map((owner, index) => <li key={index} className="list-filed__item" role="group">
                                                <ReportForChangingOwnershipV2PersonEntityDataUI choiceType={"Entity"}  {...this.bindArrayElement(x => x.secondVehicleOwners[index], [index])} />
                                            </li>)
                                        }
                                    </ul>
                                </fieldset>
                            }
                        </div>
                    </section>
                }
            </>
        )
    }
}

export class ReportForChangingOwnershipV2VehicleDataUI extends EAUBaseComponent<BaseProps, ReportForChangingOwnershipV2VehicleDataVM>{

    private sectionId: string;

    constructor(props: BaseProps) {
        super(props);

        this.sectionId = ObjectHelper.newGuid();
    }

    render() {
        return <section className="interactive-container" aria-labelledby={this.sectionId}>
            <div className="interactive-container__content">
                <h2 className="section-title section-title--report" id={this.sectionId}>{this.getResource("DOC_KAT_REPORT_DATA_PPS_L")}
                    {this.model && this.model.registrationData && <><br />№ {this.model.registrationData.registrationNumber}</>}
                </h2>
                {this.model.registrationData && <ReportForChangingOwnershipV2VehicleRegistrationDataUI {...this.bind(x => x.registrationData)} />}
                {
                    this.model.localTaxes && <fieldset className="fields-group">
                        <legend>
                            <h3 className="field-title">{this.getResourceByProperty(x => x.localTaxes)}</h3>
                        </legend>
                        <DisplayStatusesUI statuses={this.model.localTaxes} />
                    </fieldset>
                }
                {
                    this.model.guaranteeFund && <FieldFormUI title={this.getResourceByProperty(m => m.guaranteeFund)}>
                        <GuaranteeFundUI {...this.bind(m => m.guaranteeFund)} />
                    </FieldFormUI>
                }
                {
                    this.model.periodicTechnicalCheck && <FieldFormUI title={this.getResourceByProperty(m => m.periodicTechnicalCheck)}>
                        <PeriodicTechnicalCheckUI {...this.bind(m => m.periodicTechnicalCheck)} />
                    </FieldFormUI>
                }
            </div>
        </section>
    }
}

export class ReportForChangingOwnershipV2VehicleRegistrationDataUI extends EAUBaseComponent<BaseProps, VehicleRegistrationData>{

    render() {
        return <>
            <fieldset className="fields-group">
                <legend>
                    <h3 className="field-title">{this.getResource('DOC_KAT_PPS_AIS_KAT_IDENTIFICATION_DATA')}</h3>
                </legend>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationNumber)}</h4>
                        <p className="field-text">{this.model.registrationNumber}</p>
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.identificationNumber)}</h4>
                        <p className="field-text">{this.model.identificationNumber}</p>
                    </div>
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.engineNumber)}</h4>
                        <p className="field-text">{this.model.engineNumber}</p>
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationCertificateNumber)}</h4>
                        <p className="field-text">{this.model.registrationCertificateNumber}</p>
                    </div>
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.vehicleCategory)}</h4>
                        <p className="field-text">{this.model.vehicleCategory && this.model.vehicleCategory.name}</p>
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.dateOfFirstReg)}</h4>
                        <p className="field-text">{this.dateDisplayFor(this.model.dateOfFirstReg, Constants.DATE_FORMATS.date)}</p>
                    </div>
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.nextVehicleInspection)}</h4>
                        <p className="field-text">{this.dateDisplayFor(this.model.nextVehicleInspection, Constants.DATE_FORMATS.date)}</p>
                    </div>
                </div>
                <div className="row">
                    <div className="col-12 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.policeDepartment)}</h4>
                        <p className="field-text">{this.model.policeDepartment && this.model.policeDepartment.policeDepartmentName}</p>
                    </div>
                </div>
                <DisplayStatusesUI statuses={this.model.statuses} warningLabel="СРМПС не може да бъде заявено за печат" />
            </fieldset>
        </>
    }
}

interface ReportForChangingOwnershipV2PersonEntityDataProps extends BaseProps {
    choiceType: "Person" | "Entity"
}

export class ReportForChangingOwnershipV2PersonEntityDataUI extends EAUBaseComponent<ReportForChangingOwnershipV2PersonEntityDataProps, PersonEntityDataVM>{

    render() {

        if (this.props.choiceType == "Person" && this.model.person) {
            return <PersonDataUI {...this.bind(x => x.person)} />

        } else if (this.props.choiceType == "Entity" && this.model.entity) {
            return <EntityDataUI {...this.bind(x => x.entity)} />
        }

        return null;
    }
}