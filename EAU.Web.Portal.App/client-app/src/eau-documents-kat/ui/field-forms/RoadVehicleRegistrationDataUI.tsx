import React from "react";
import { action } from "mobx";
import { observer } from "mobx-react";
import { BaseProps } from "cnsys-ui-react";
import { attributesClassFormControlReqired, attributesClassFormControlRequiredLabel, EAUBaseComponent, ResourceHelpers } from "eau-core";
import { RegistrationCertificateTypeNomenclature, VehicleRegistrationData } from "../../models/ModelsAutoGenerated";
import { RoadVehicleRegistrationDataValidator } from "../../validations/RoadVehicleRegistrationDataValidator";

interface RoadVehicleRegistrationDataUIProps extends BaseProps {
    hideRegistrationCertificateType?: boolean;
    showInlineHelpForRegistrationCertificateNumber?: boolean;
}

@observer export class RoadVehicleRegistrationDataUI extends EAUBaseComponent<RoadVehicleRegistrationDataUIProps, VehicleRegistrationData> {
    constructor(props?: RoadVehicleRegistrationDataUIProps, context?: any) {
        super(props, context);

        //Bind
        this.onChangeRegistrationCertificateType = this.onChangeRegistrationCertificateType.bind(this);
    }

    renderEdit(): JSX.Element {
        return (
            <>
                <div className="row">
                    <div className="form-group col-sm-6">
                        {/** Регистрационен номер на ППС **/}
                        {this.labelFor(m => m.registrationNumber, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.registrationNumber, attributesClassFormControlReqired)}
                    </div>
                </div>
                {
                    this.props.hideRegistrationCertificateType === true
                        ? <div className="row">
                            <div className="form-group col-sm-6">
                                {/** Номер на свидетелство за регистрация на МПС */}
                                {this.labelFor(m => m.registrationCertificateNumber, "DOC_KAT_vehicleRegistrationCertificateNumber_L", attributesClassFormControlRequiredLabel)}
                                {this.textBoxFor(m => m.registrationCertificateNumber, attributesClassFormControlReqired)}
                                {this.props.showInlineHelpForRegistrationCertificateNumber && this.inlineHelpFor(m => m.registrationCertificateNumber, "DOC_KAT_REGISTRATION_CERTIFICATE_NUMBER_I")}
                            </div>
                        </div>
                        : <>
                            <div className="row">
                                <div className="form-group col-12">
                                    {/** Вид на документа */}
                                    <fieldset>
                                        <legend className="form-control-label">{this.labelFor(m => m.registrationCertificateType, null, attributesClassFormControlRequiredLabel)}</legend>
                                        {this.radioButtonListFor(m => m.registrationCertificateType, ResourceHelpers.getSelectListItemsForEnum(RegistrationCertificateTypeNomenclature), null, this.onChangeRegistrationCertificateType)}
                                    </fieldset>
                                </div>
                            </div>
                            <div className="row">
                                <div className="form-group col-sm-6">
                                    {/** Номер на документа */}
                                    {this.labelFor(m => m.registrationCertificateNumber, null, attributesClassFormControlRequiredLabel)}
                                    {this.textBoxFor(m => m.registrationCertificateNumber, attributesClassFormControlReqired)}
                                </div>
                            </div>
                        </>
                }
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <div className="row">
                    <div className="form-group col-sm-6">
                        {/** Регистрационен номер на ППС **/}
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationNumber)}</h4>
                        {this.textDisplayFor(m => m.registrationNumber)}
                    </div>
                </div>
                {
                    this.props.hideRegistrationCertificateType === true
                        ? <div className="row">
                            <div className="form-group col-sm-6">
                                {/** Номер на свидетелство за регистрация на МПС */}
                                <h4 className="form-control-label">{this.getResource("DOC_KAT_vehicleRegistrationCertificateNumber_L")}</h4>
                                {this.textDisplayFor(m => m.registrationCertificateNumber)}
                            </div>
                        </div>
                        : <>
                            <div className="row">
                                <div className="form-group col-12">
                                    {/** Вид на документа */}
                                    <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationCertificateType)}</h4>
                                    {ResourceHelpers.getResourceByEmun(this.model.registrationCertificateType as number, RegistrationCertificateTypeNomenclature)}
                                    {this.propertyErrorsDispleyFor(m => m.registrationCertificateType)}
                                </div>
                            </div>
                            <div className="row">
                                <div className="form-group col-sm-6">
                                    {/** Номер на документа */}
                                    <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationCertificateNumber)}</h4>
                                    {this.textDisplayFor(m => m.registrationCertificateNumber)}
                                </div>
                            </div>
                        </>
                }
            </>
        );
    }

    @action private onChangeRegistrationCertificateType(e: any): void {
        //MVREAU2020-1867
        this.model.removeError("registrationCertificateNumber");

        //let validator = new RoadVehicleRegistrationDataValidator();
        //validator.validate(this.model);
    }
}