import { BaseProps } from "cnsys-ui-react";
import { EAUBaseComponent } from "eau-core";
import { PersonIdentifierChoiceType, withCollectionItems } from "eau-documents";
import { observer } from "mobx-react";
import React from "react";
import { PersonDataVM, PersonEntityDataVM, PersonEntityFarmerChoiceType, PersonIdentifierVM, VehicleOwnerDataVM } from "../../models/ModelsAutoGenerated";
import { OwnerUI } from "./OwnerUI";

interface VehicleOwnerDataProps extends BaseProps {
    newOwner: boolean;
    coutntOfVehicle: number;
}

@observer export class VehicleOwnerDataImpl extends EAUBaseComponent<VehicleOwnerDataProps, VehicleOwnerDataVM> {

    renderEdit(): JSX.Element {
        return (
            <>
                <OwnerUI {...this.bind(m => m)} newOwner={this.props.newOwner} canSoldBySyndic={this.props.coutntOfVehicle && this.props.coutntOfVehicle == 1 ? true : false} />
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <OwnerUI {...this.bind(m => m)} newOwner={this.props.newOwner} />
            </>
        );
    }
}

export const VehicleOwnerDataCollectionUI = withCollectionItems(VehicleOwnerDataImpl, {
    initItem: () => {
        let newOwner = new VehicleOwnerDataVM();
        newOwner.personEntityData = new PersonEntityDataVM();
        newOwner.personEntityData.selectedPersonEntityFarmerChoiceType = PersonEntityFarmerChoiceType.Person;
        newOwner.personEntityData.person = new PersonDataVM();
        newOwner.personEntityData.person.identifier = new PersonIdentifierVM();
        newOwner.personEntityData.person.identifier.itemElementName = PersonIdentifierChoiceType.EGN;
        newOwner.personEntityData.person.validateIdentityNumber = true;

        return newOwner;
    }
});