import { BaseProps, ViewMode } from "cnsys-ui-react";
import { EAUBaseComponent, ValidationSummary, ValidationSummaryStrategy } from "eau-core";
import { FieldFormUI } from "eau-documents";
import { observer } from "mobx-react";
import React from "react";
import { VehicleRegistrationChangeWithBarterVM } from "../../models/ModelsAutoGenerated";
import { VehicleOwnerDataCollectionUI } from "./VehicleOwnerDataCollectionUI";
import { VehicleRegistrationDataUI } from "./VehicleRegistrationDataUI";

interface VehicleRegistrationChangeWithBarterUIProps extends BaseProps {
}

@observer export class VehicleRegistrationChangeWithBarterUI extends EAUBaseComponent<VehicleRegistrationChangeWithBarterUIProps, VehicleRegistrationChangeWithBarterVM> {

    renderEdit(): JSX.Element {
        return (
            <>
                <ValidationSummary model={this.model} strategy={ValidationSummaryStrategy.includeOnlyModelErrors} />
                <FieldFormUI title={this.getResourceByProperty(m => m.firstVehicleData)}>
                    <VehicleRegistrationDataUI {...this.bind(m => m.firstVehicleData)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.firstVehicleOwners)}>
                    <VehicleOwnerDataCollectionUI {...this.bind(m => m.firstVehicleOwners)} newOwner={true} addButtonLabelKey={ "GL_ADD_BARTER_OWNER_L"} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.secondVehicleData)}>
                    <VehicleRegistrationDataUI {...this.bind(m => m.secondVehicleData)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.secondVehicleOwners)}>
                    <VehicleOwnerDataCollectionUI {...this.bind(m => m.secondVehicleOwners)} newOwner={true} addButtonLabelKey={"GL_ADD_BARTER_OWNER_L"}/>
                </FieldFormUI>
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <ValidationSummary model={this.model} strategy={ValidationSummaryStrategy.includeOnlyModelErrors} viewMode={ViewMode.Display} />
                <FieldFormUI title={this.getResourceByProperty(m => m.firstVehicleData)}>
                    <VehicleRegistrationDataUI {...this.bind(m => m.firstVehicleData)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.firstVehicleOwners)}>
                    <VehicleOwnerDataCollectionUI {...this.bind(m => m.firstVehicleOwners)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.secondVehicleData)}>
                    <VehicleRegistrationDataUI {...this.bind(m => m.secondVehicleData)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.secondVehicleOwners)}>
                    <VehicleOwnerDataCollectionUI {...this.bind(m => m.secondVehicleOwners)} />
                </FieldFormUI>
            </>
        );
    }
}