import { BaseProps } from "cnsys-ui-react";
import { EAUBaseComponent } from "eau-core";
import { PersonIdentifierChoiceType } from "eau-documents";
import { observer } from "mobx-react";
import React from "react";
import { PersonDataVM, PersonEntityChoiceType, PersonEntityDataVM, PersonIdentifierVM, VehicleBuyerDataVM, RequestForDecisionForDealDataVM } from "../../models/ModelsAutoGenerated";
import { BuyerUI } from "./BuyerUI";
import { action } from "mobx";

@observer export class BuyersCollectionUI extends EAUBaseComponent<BaseProps, RequestForDecisionForDealDataVM>{

    renderEdit(): JSX.Element {
        return (
            <>
                <ul className="list-filed">
                    {this.model.buyersCollection.map((item: VehicleBuyerDataVM, index: number) => {
                        return (
                            <li className="list-filed__item" key={index} role="group">
                                <div id={"buyersCollection-" + index} className="interactive-container interactive-container--form">
                                    <div className="interactive-container__content record-container">
                                        <BuyerUI key={index} {...this.bindArrayElement(m => m.buyersCollection[index], [index])} />
                                    </div>
                                    <div className="interactive-container__controls">
                                        {index > 0
                                            ? <button title={this.getResource("GL_DELETE_L")} className="btn btn-light btn-sm" onFocus={() => this.onHover(index)} onBlur={() => this.onHoverLeave(index)} onMouseOver={() => this.onHover(index)} onMouseLeave={() => this.onHoverLeave(index)} onClick={this.removeBuyer.bind(this, index)}>
                                                <i className="ui-icon ui-icon-times" aria-hidden="true"></i>
                                                <span className="d-none">{this.getResource("GL_DELETE_L")}</span>
                                            </button>
                                            : null}
                                    </div>
                                </div>
                            </li>
                        )
                    })}
                </ul>
                <div className="row">
                    <div className="form-group col">
                        <hr aria-hidden="true" />
                        <button className="btn btn-light" onClick={this.addBuyer.bind(this)} type="button">
                            <i className="ui-icon ui-icon-plus mr-1" aria-hidden="true"></i>
                            {this.getResource("GL_ADD_NEW_OWNER_L")}
                        </button>
                    </div>
                </div>

            </>
        )
    }

    renderDisplay(): JSX.Element {
        return (
            <ul className="list-filed">
                {
                    this.model.buyersCollection.map((item: VehicleBuyerDataVM, index: number) => {
                        return (
                            <li className="list-filed__item" role="group" key={index}>
                                <BuyerUI key={index} {...this.bindArrayElement(m => m.buyersCollection[index], [index])} />
                            </li>
                        )
                    })
                }
            </ul>
        )
    }

    @action addBuyer() {
        var newBuyer = new VehicleBuyerDataVM();
        newBuyer.personEntityData = new PersonEntityDataVM();
        newBuyer.personEntityData.selectedChoiceType = PersonEntityChoiceType.Person;
        newBuyer.personEntityData.person = new PersonDataVM();
        newBuyer.personEntityData.person.identifier = new PersonIdentifierVM();
        newBuyer.personEntityData.person.identifier.itemElementName = PersonIdentifierChoiceType.EGN;
        newBuyer.personEntityData.person.validateIdentityNumber = true;
        newBuyer.validateEmail = true;
        this.model.buyersCollection.push(newBuyer);
    }

    removeBuyer(index: number) {
        if (index > 0) {
            this.model.buyersCollection.splice(index, 1);
        }
    }

    private onHover(index: number) {
        $("#" + "buyersCollection-" + index).addClass("interactive-container--focus");
    }

    private onHoverLeave(index: number) {
        $("#" + "buyersCollection-" + index).removeClass("interactive-container--focus");
    }
}