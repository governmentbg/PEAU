import React from "react";
import { observer } from "mobx-react";
import { BaseProps } from "cnsys-ui-react";
import { RegistrationCertificateTypeNomenclature, VehicleRegistrationData, Status } from "../../models/ModelsAutoGenerated"
import { EAUBaseComponent, ResourceHelpers, Constants } from "eau-core";
import { render } from "react-dom";
import { PoliceDepartmentUI } from "eau-documents";
import { StatusUI } from ".";
import { ArrayHelper } from "cnsys-core";

interface VehicleRegistrationDataUIProps extends BaseProps {
}

@observer export class VehicleRegistrationDataForDocsUI extends EAUBaseComponent<VehicleRegistrationDataUIProps, VehicleRegistrationData> {

    constructor(props: VehicleRegistrationDataUIProps) {
        super(props);

    }

    render(): JSX.Element {
        return (
            <>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationNumber)}</h4>
                        {this.textDisplayFor(m => m.registrationNumber)}
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.identificationNumber)}</h4>
                        {this.textDisplayFor(m => m.identificationNumber)}
                    </div>
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.engineNumber)}</h4>
                        {this.textDisplayFor(m => m.engineNumber)}
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationCertificateNumber)}</h4>
                        {this.textDisplayFor(m => m.registrationCertificateNumber)}
                    </div>
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.vehicleCategory)}</h4>
                        {this.textDisplay(this.model.vehicleCategory.code, this.model.vehicleCategory, "code")}                       
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.dateOfFirstReg)}</h4>
                        {this.dateDisplayFor(this.model.dateOfFirstReg, Constants.DATE_FORMATS.date)}
                    </div>
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.nextVehicleInspection)}</h4>
                        {this.dateDisplayFor(this.model.nextVehicleInspection, Constants.DATE_FORMATS.date)}
                    </div>
                </div>
                <div className="row">
                    <div className="col-12 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.policeDepartment)}</h4>
                        <PoliceDepartmentUI {...this.bind(m => m.policeDepartment)} />
                    </div>
                </div>
                {
                    this.model.statuses && this.model.statuses.length > 0 ?
                        <>
                            <div className="row">
                                {ArrayHelper.queryable.from(this.model.statuses).where(el => el.blocking == true).toArray().length > 0 ?
                                    <div className="alert alert-danger" role="alert">
                                        <p>
                                            <b>Услугата се прекратява</b>
                                            <ul className="list-filed">
                                                {ArrayHelper.queryable.from(this.model.statuses).where(el => el.blocking == true).toArray().map((item: Status, idx: number) => {
                                                    return (
                                                        <li key={idx}>
                                                            <StatusUI {...this.bindArrayElement(m => m.statuses[idx], [idx])} />
                                                        </li>
                                                    );
                                                })}
                                            </ul>
                                        </p>
                                    </div>
                                    :
                                    <div className="alert alert-warning">
                                        <p>
                                            <b>СРМПС не може да бъде заявено за печат</b>
                                            <ul className="list-filed">
                                                {ArrayHelper.queryable.from(this.model.statuses).where(el => el.blocking == false).toArray().map((item: Status, idx: number) => {
                                                    return (
                                                        <li key={idx}>
                                                            <StatusUI {...this.bindArrayElement(m => m.statuses[idx], [idx])} />
                                                        </li>
                                                    );
                                                })}
                                            </ul>
                                        </p>
                                    </div>
                                }
                            </div>
                        </>
                        : null
                }
            </>
        );
    }
}