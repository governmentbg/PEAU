import React from "react";
import { observer } from "mobx-react";
import { BaseProps } from "cnsys-ui-react";
import { VehicleRegistrationDataVM, RegistrationCertificateTypeNomenclature } from "../../models/ModelsAutoGenerated"
import { EAUBaseComponent, ResourceHelpers, attributesClassFormControlReqired, attributesClassFormControlRequiredLabel } from "eau-core";
import { action } from "mobx";

interface VehicleRegistrationDataUIProps extends BaseProps {
}

@observer export class VehicleRegistrationDataUI extends EAUBaseComponent<VehicleRegistrationDataUIProps, VehicleRegistrationDataVM> {


    constructor(props: VehicleRegistrationDataUIProps) {
        super(props);

        //Bind
        this.onChangeRegistrationCertificateType = this.onChangeRegistrationCertificateType.bind(this);

        if (!this.model.registrationCertificateType)
            this.model.registrationCertificateType = RegistrationCertificateTypeNomenclature.RegistrationDocument;
    }

    renderEdit(): JSX.Element {
        return (
            <>
                <div className="row">
                    <div className="form-group col-sm-6">
                        {/** Регистрационен номер на ППС **/}
                        {this.labelFor(m => m.registrationNumber, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.registrationNumber, attributesClassFormControlReqired)}
                    </div>
                    <div className="form-group col-sm-6">
                        {/** Рама (VIN) на ППС */}
                        {this.labelFor(m => m.identificationNumber, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.identificationNumber, attributesClassFormControlReqired)}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-12">
                        {/** Вид на документа */}
                        <fieldset>
                            <legend className="form-control-label">{this.labelFor(m => m.registrationCertificateType, null, attributesClassFormControlRequiredLabel)}</legend>
                            {this.radioButtonListFor(m => m.registrationCertificateType, ResourceHelpers.getSelectListItemsForEnum(RegistrationCertificateTypeNomenclature), null, this.onChangeRegistrationCertificateType)}
                        </fieldset>
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-sm-6">
                        {/** Номер на документа */}
                        {this.labelFor(m => m.registrationCertificateNumber, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.registrationCertificateNumber, attributesClassFormControlReqired)}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-12">
                        <div className="custom-control custom-checkbox">
                            {this.checkBoxFor(m => m.availableDocumentForPaidAnnualTax)}
                        </div>
                    </div>
                </div>
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationNumber)}</h4>
                        {this.textDisplayFor(m => m.registrationNumber)}
                    </div>
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.identificationNumber)}</h4>
                        {this.textDisplayFor(m => m.identificationNumber)}
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationCertificateType)}</h4>
                        {ResourceHelpers.getResourceByEmun(this.model.registrationCertificateType as number, RegistrationCertificateTypeNomenclature)}
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-6 form-group">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.registrationCertificateNumber)}</h4>
                        {this.textDisplayFor(m => m.registrationCertificateNumber)}
                    </div>
                </div>
                {this.model.availableDocumentForPaidAnnualTax ?
                    <div className="row">
                        <div className="form-group col-12">

                            <p className="field-text check-item check-success">
                                {this.getResourceByProperty(m => m.availableDocumentForPaidAnnualTax)}
                            </p>
                        </div>
                    </div>
                    : null}
            </>
        );
    }

    @action private onChangeRegistrationCertificateType(e: any): void {
       
        this.model.removeError("registrationCertificateNumber");        
    }
}