import { BaseProps, ViewMode } from "cnsys-ui-react";
import { EAUBaseComponent, ResourceHelpers, resourceManager } from "eau-core";
import { ApplicationFormManagerProps, withDocumentFormManager, FieldFormUI, GraoAddressUI, PoliceDepartmentUI } from "eau-documents";
import { observer } from "mobx-react";
import React from "react";
import { ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataVM, CouponDuplicateIssuensReason} from "../../models/ModelsAutoGenerated";

interface ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataProps extends BaseProps, ApplicationFormManagerProps {
}

@observer export class ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataImpl
    extends EAUBaseComponent<ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataProps, ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataVM> {

    renderEdit(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.issuingPoliceDepartment)}>
                    <PoliceDepartmentUI  {...this.bind(m => m.issuingPoliceDepartment, ViewMode.Display)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m)}>
                    <FieldFormUI title={this.getResourceByProperty(m => m.permanentAddress)} headerType={"h4"}>
                        {/** Постоянен адрес */}
                        <GraoAddressUI {...this.bind(m => m.permanentAddress)} viewMode={ViewMode.Display} />
                    </FieldFormUI>
                    <FieldFormUI title={this.getResourceByProperty(m => m.currentAddress)} headerType={"h4"}>
                        {/** Настоящ адрес */}
                        <GraoAddressUI {...this.bind(m => m.currentAddress)} viewMode={ViewMode.Display} />
                    </FieldFormUI>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.couponDuplicateIssuensReason)} required>
                    {/** Причина за издаване на дубликат на контролен талон */}
                    <div className="row">
                        <div className="form-group col-sm-6">
                            {this.dropDownListFor(m => m.couponDuplicateIssuensReason
                                , ResourceHelpers.getSelectListItemsForEnum(CouponDuplicateIssuensReason)
                                , null
                                , null
                                , true
                                , this.getResource('GL_DDL_CHOICE_L'))}
                        </div>
                    </div>
                </FieldFormUI>
                <fieldset className="fields-group">
                    <legend>
                        <h3 className="field-title">
                            {resourceManager.getResourceByKey("DOC_GL_ReceiveERefusal_L")}
                        </h3>
                    </legend>
                    <div className="custom-control custom-checkbox">
                        {/** желая да получа отказа като електронен документ */}
                        {this.checkBoxFor(m => m.agreementToReceiveERefusal)}
                    </div>
                </fieldset>
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.issuingPoliceDepartment)}>
                    <div className="row">
                        <div className="form-group col-12">
                            <PoliceDepartmentUI  {...this.bind(m => m.issuingPoliceDepartment)} />
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m)}>
                    <div className="row">
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{this.getResourceByProperty(m => m.permanentAddress)}</h4>
                            <GraoAddressUI {...this.bind(m => m.permanentAddress)} />
                        </div>
                    </div>
                    <div className="row">
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{this.getResourceByProperty(m => m.currentAddress)}</h4>
                            <GraoAddressUI {...this.bind(m => m.currentAddress)} />
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.couponDuplicateIssuensReason)}>
                    <div className="row">
                        <div className="col-12 form-group">
                            <p className="field-text">{ResourceHelpers.getResourceByEmun(this.model.couponDuplicateIssuensReason as number, CouponDuplicateIssuensReason)}</p>
                            {this.propertyErrorsDispleyFor(m => m.couponDuplicateIssuensReason)}
                        </div>
                    </div>
                </FieldFormUI>
                 {this.model.agreementToReceiveERefusal === true
                        &&
                        <FieldFormUI title={this.getResource('DOC_GL_ProvidingRefusalDocument_L')}>
                            <p className="field-text check-item check-success">{this.getResourceByProperty(m => m.agreementToReceiveERefusal)}</p>
                        </FieldFormUI>}
            </>
        );
    }
}

export const ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataUI = withDocumentFormManager(ApplicationForIssuingOfDuplicateOfDrivingLicenseControlCouponDataImpl)