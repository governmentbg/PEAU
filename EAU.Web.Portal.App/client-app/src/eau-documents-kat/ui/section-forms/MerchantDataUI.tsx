import React from "react";
import { observer } from "mobx-react";
import { ObjectHelper } from "cnsys-core";
import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlReqired, EAUBaseComponent } from "eau-core";
import { EkatteAddressUI, FieldFormUI, ApplicationFormManagerProps, withDocumentFormManager, ApplicationType } from "eau-documents";
import { MerchantData } from "../../models/ModelsAutoGenerated";
import { MerchantDataCompanyCaseUI } from "../field-forms/MerchantDataCompanyCaseUI";

interface MerchantDataProps extends BaseProps, ApplicationFormManagerProps {
}

@observer class MerchantDataUIImpl extends EAUBaseComponent<MerchantDataProps, MerchantData> {

    renderEdit(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.companyCase)}>
                    {/** Фирмено дело */}
                    <MerchantDataCompanyCaseUI {...this.bind(m => m.companyCase)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.entityManagementAddress)} required={true}>
                    {/** Седалище и адрес на управление */}
                    <EkatteAddressUI
                        {...this.bind(m => m.entityManagementAddress)}
                        viewMode={this.props.documentFormManager.applicationType == ApplicationType.AppForFirstReg ? this.props.viewMode : ViewMode.Display}/>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.correspondingAddress)} required={true}>
                    {/** Адрес за кореспонденция */}
                    <EkatteAddressUI {...this.bind(m => m.correspondingAddress)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.phone)} required={true}>
                    <div className="row">
                        <div className="form-group col-sm-10 col-lg-6">
                            {/** Телефон */}
                            {this.textBoxFor(m => m.phone, attributesClassFormControlReqired)}
                        </div>
                    </div>
                </FieldFormUI>
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                {(ObjectHelper.isNullOrUndefined(this.model.companyCase)
                    || (ObjectHelper.isStringNullOrEmpty(this.model.companyCase.number) && ObjectHelper.isStringNullOrEmpty(this.model.companyCase.courtName))) ?
                    null
                    :
                    <FieldFormUI title={this.getResourceByProperty(m => m.companyCase)}>
                        {/** Фирмено дело */}
                        <MerchantDataCompanyCaseUI {...this.bind(m => m.companyCase)} />
                    </FieldFormUI>}
                <FieldFormUI title={this.getResourceByProperty(m => m.entityManagementAddress)}>
                    {/** Седалище и адрес на управление */}
                    <div className="row">
                        <div className="form-group col-12">
                            <EkatteAddressUI {...this.bind(m => m.entityManagementAddress)} />
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.correspondingAddress)}>
                    {/** Адрес за кореспонденция */}
                    <div className="row">
                        <div className="form-group col-12">
                            <EkatteAddressUI {...this.bind(m => m.correspondingAddress)} />
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.phone)}>
                    <div className="row">
                        <div className="col-12 form-group">
                            {/** Телефон */}
                            {this.textDisplayFor(m => m.phone)}
                        </div>
                    </div>
                </FieldFormUI>
            </>
        );
    }
}

export const MerchantDataUI = withDocumentFormManager(MerchantDataUIImpl);