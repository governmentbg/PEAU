import * as React from "react";
import { observer } from "mobx-react";
import { BaseProps } from "cnsys-ui-react";
import { EAUBaseComponent } from "eau-core";
import { RequestForDecisionForDealDataVM, VehicleBuyerDataVM, PersonEntityDataVM, PersonEntityChoiceType, PersonDataVM, PersonIdentifierVM, VehicleOwnerDataVM } from "../../models/ModelsAutoGenerated";
import { FieldFormUI, PersonIdentifierChoiceType } from "eau-documents";
import { VehicleRegistrationDataUI, BuyersCollectionUI, OwnersCollectionUI } from "../field-forms";

interface RequestForDecisionForDealDataUIProps extends BaseProps {
}


@observer
export class RequestForDecisionForDealDataUI
    extends EAUBaseComponent<RequestForDecisionForDealDataUIProps, RequestForDecisionForDealDataVM> {    

    constructor(props: RequestForDecisionForDealDataUIProps) {
        super(props);

        //Bind       

        //Init
        //if (this.model.buyersCollection.length == 0) {
        //    this.addFirstBuyer();
        //}
        //if (this.model.ownersCollection.length == 0) {
        //    this.addFirstOwner();
        //}
    }

    renderEdit(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.vehicleRegistrationData)}>
                    <VehicleRegistrationDataUI {...this.bind(m => m.vehicleRegistrationData)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.ownersCollection)}>
                    <OwnersCollectionUI {...this.bind(m => m)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.buyersCollection)}>
                    <BuyersCollectionUI {...this.bind(m => m)} />
                </FieldFormUI>
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.vehicleRegistrationData)}>
                    <VehicleRegistrationDataUI {...this.bind(m => m.vehicleRegistrationData)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.ownersCollection)}>
                    <OwnersCollectionUI {...this.bind(m => m)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.buyersCollection)}>
                    <BuyersCollectionUI {...this.bind(m => m)} />
                </FieldFormUI>
            </>
        );
    }

    addFirstBuyer() {        
        var newBuyer = new VehicleBuyerDataVM();
        newBuyer.personEntityData = new PersonEntityDataVM();
        newBuyer.personEntityData.selectedChoiceType = PersonEntityChoiceType.Person;
        newBuyer.personEntityData.person = new PersonDataVM();
        newBuyer.personEntityData.person.identifier = new PersonIdentifierVM();
        newBuyer.personEntityData.person.identifier.itemElementName = PersonIdentifierChoiceType.EGN;
        newBuyer.personEntityData.person.validateIdentityNumber = true;
        newBuyer.validateEmail = true;
        this.model.buyersCollection.push(newBuyer);
    }

    addFirstOwner() {       
        var newOwner = new VehicleOwnerDataVM();
        newOwner.personEntityData = new PersonEntityDataVM();
        newOwner.personEntityData.selectedChoiceType = PersonEntityChoiceType.Person;
        newOwner.personEntityData.person = new PersonDataVM();
        newOwner.personEntityData.person.identifier = new PersonIdentifierVM();
        newOwner.personEntityData.person.identifier.itemElementName = PersonIdentifierChoiceType.EGN;
        newOwner.personEntityData.person.validateIdentityNumber = true;
        this.model.ownersCollection.push(newOwner);
    }
}