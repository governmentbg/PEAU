import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlReqired, EAUBaseComponent } from "eau-core";
import { ApplicationFormManagerProps, ApplicationType, EkatteAddressUI, FieldFormUI, PersonIdentifier, PersonIdentifierChoiceType, withCollectionItems, withDocumentFormManager } from "eau-documents";
import { observer } from "mobx-react";
import React from "react";
import { ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataAuthorizedPersons, ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataVM } from "../../models/ModelsAutoGenerated";
import { ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataAuthorizedPersonsUI } from "../field-forms/ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataAuthorizedPersonsUI";

interface ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataProps extends BaseProps, ApplicationFormManagerProps {
}

@observer class ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataUIImpl
    extends EAUBaseComponent<ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataProps, ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataVM> {

    renderEdit(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.temporaryPlatesCount)} required={true}>
                    <div className="row">
                        <div className="form-group col-6 col-md-4 col-lg-2">
                            {/** Брой комплекта временни табели с регистрационен номер */}
                            {this.textBoxFor(m => m.temporaryPlatesCount, attributesClassFormControlReqired)}
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.operationalNewVehicleMakes)}>
                    {/** Търговецът е вносител/производител на нови автомобили от следните марки */}
                    {this.textAreaFor(m => m.operationalNewVehicleMakes, null, 3)}
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.operationalSecondHandVehicleMakes)}>
                    {/** Търговецът извършва търговска дейност с автомобили, втора употреба, от следните марки */}
                    {this.textAreaFor(m => m.operationalSecondHandVehicleMakes, null, 3)}
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.vehicleDealershipAddress)} required={true}>
                    {/** Адрес на търговския обект, където ще се съхранява дневника за завеждане на временните табелите с регистрационен номер */}
                    {
                        this.props.documentFormManager.applicationType == ApplicationType.AppForFirstReg && <div className="alert alert-info">
                            <p>{this.getResource('DOC_KAT_ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsData_vehicleDealershipAddress_I')}</p>
                        </div>
                    }
                    <EkatteAddressUI
                        {...this.bind(m => m.vehicleDealershipAddress)}
                        viewMode={this.props.documentFormManager.applicationType == ApplicationType.AppForFirstReg ? this.props.viewMode : ViewMode.Display} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.authorizedPersons)} required={true}>
                    {/** Упълномощени лица, служител/и на търговеца за водене на дневника за завеждане на табелите */}
                    <AuthorizedPersonsUI {...this.bind(m => m.authorizedPersons.items)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.phone)} required={true}>
                    {/** Телефон за справка за временните табели с регистрационен номер */}
                    <div className="row">
                        <div className="form-group col-sm-6">
                            {this.textBoxFor(m => m.phone, attributesClassFormControlReqired)}
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResource('DOC_GL_ProvidingRefusalDocument_L')}>
                    <div className="row">
                        <div className="form-group col-12">
                            <div className="custom-control custom-checkbox">
                                {/** желая да получа отказа като електронен документ */}
                                {this.checkBoxFor(m => m.agreementToReceiveERefusal)}
                            </div>
                        </div>
                    </div>
                </FieldFormUI>
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.temporaryPlatesCount)}>
                    {/** Брой комплекта временни табели с регистрационен номер */}
                    <div className="row">
                        <div className="form-group col-12">
                            {this.textDisplayFor(m => m.temporaryPlatesCount)}
                        </div>
                    </div>
                </FieldFormUI>
                {this.model.operationalNewVehicleMakes ?

                    <FieldFormUI title={this.getResourceByProperty(m => m.operationalNewVehicleMakes)}>
                        {/** Търговецът е вносител/производител на нови автомобили от следните марки */}
                        <div className="row">
                            <div className="form-group col-12">
                                {this.textDisplayFor(m => m.operationalNewVehicleMakes)}
                            </div>
                        </div>
                    </FieldFormUI>
                    : null}
                {this.model.operationalSecondHandVehicleMakes ?

                    <FieldFormUI title={this.getResourceByProperty(m => m.operationalSecondHandVehicleMakes)}>
                        {/** Търговецът извършва търговска дейност с автомобили, втора употреба, от следните марки */}
                        <div className="row">
                            <div className="form-group col-12">
                                {this.textDisplayFor(m => m.operationalSecondHandVehicleMakes)}
                            </div>
                        </div>
                    </FieldFormUI>
                    : null}
                <FieldFormUI title={this.getResourceByProperty(m => m.vehicleDealershipAddress)}>
                    {/** Адрес на търговския обект, където ще се съхранява дневника за завеждане на временните табелите с регистрационен номер */}
                    <div className="row">
                        <div className="form-group col-12">
                            <EkatteAddressUI {...this.bind(m => m.vehicleDealershipAddress)} />
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.authorizedPersons)}>
                    {/** Упълномощени лица, служител/и на търговеца за водене на дневника за завеждане на табелите */}
                    <AuthorizedPersonsUI {...this.bind(m => m.authorizedPersons.items)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.phone)}>
                    {/** Телефон */}
                    <div className="row">
                        <div className="form-group col-12">
                            {this.textDisplayFor(m => m.phone)}
                        </div>
                    </div>
                </FieldFormUI>
                {this.model.agreementToReceiveERefusal === true
                    &&
                    <FieldFormUI title={this.getResource('DOC_GL_ProvidingRefusalDocument_L')}>
                        <div className="row">
                            <div className="form-group col-12">
                                <p className="field-text check-item check-success">{this.getResourceByProperty(m => m.agreementToReceiveERefusal)}</p>
                            </div>
                        </div>
                    </FieldFormUI>}
            </>
        );
    }
}

const AuthorizedPersonsUI = withCollectionItems(ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataAuthorizedPersonsUI, {
    initItem: () => {
        let newAuthorizedPerson = new ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataAuthorizedPersons()
        newAuthorizedPerson.fullName = undefined;
        newAuthorizedPerson.identifier = new PersonIdentifier();
        newAuthorizedPerson.identifier.itemElementName = PersonIdentifierChoiceType.EGN;

        return newAuthorizedPerson;
    },
    addButtonLabelKey: 'GL_ADD_PERSON_L'
});

export const ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataUI = withDocumentFormManager(ApplicationForIssuingOfTemporaryRegistrationPlatesToMerchantsDataUIImpl); 