import { EAUBaseValidator, ErrMsgCodesConstants, ResourceHelpers } from "eau-core";
import { ElectronicStatementAuthorVM } from "../models/ModelsAutoGenerated";
import { DocumentFormValidationContext } from "./DocumentFormValidationContext";
import { EntityBasicDataValidator } from "./EntityBasicDataValidator";
import { PersonBasicDataVMValidator } from "./PersonBasicDataVMValidator";

export class ElectronicStatementAuthorVMValidator extends EAUBaseValidator<ElectronicStatementAuthorVM, DocumentFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.itemPersonBasicData).setValidator(new PersonBasicDataVMValidator());
        //this.ruleFor(m => m.itemForeignCitizenBasicData).setValidator(new ForeignCitizenBasicDataValidator());
        this.ruleFor(m => m.itemEntityBasicData).setValidator(new EntityBasicDataValidator());
        //this.ruleFor(m => m.itemForeignEntityBasicData).setValidator(new ForeignEntityBasicDataVMValidator());

        this.ruleFor(m => m.emailAddress).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new ElectronicStatementAuthorVM(), 'emailAddress'));
        this.ruleFor(m => m.emailAddress).emailAddress()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldMustContainsValidEmailAddress, new ElectronicStatementAuthorVM(), 'emailAddress'));
    }
}