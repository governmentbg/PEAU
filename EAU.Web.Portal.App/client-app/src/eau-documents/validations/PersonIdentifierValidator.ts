import { EAUBaseValidator, ResourceHelpers, ErrMsgCodesConstants } from "eau-core";
import { PersonIdentifier, PersonIdentifierChoiceType } from "../models/ModelsAutoGenerated";
import { DocumentFormValidationContext } from "./DocumentFormValidationContext";

export class PersonIdentifierValidator extends EAUBaseValidator<PersonIdentifier, DocumentFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.item).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new PersonIdentifier(), 'item'));

        this.ruleFor(m => m.item).isValidEGN()
            .when(m => m.itemElementName == PersonIdentifierChoiceType.EGN && (m.item != null && m.item != ""))
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.InvalidEGN, new PersonIdentifier(), 'item'));

        this.ruleFor(m => m.item).isValidLNCh()
            .when(m => m.itemElementName == PersonIdentifierChoiceType.LNCh && (m.item != null && m.item != ""))
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.InvalidLNCh, new PersonIdentifier(), 'item'));
    }
}