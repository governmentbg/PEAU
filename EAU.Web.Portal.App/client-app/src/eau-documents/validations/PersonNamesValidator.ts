import { EAUBaseValidator, ResourceHelpers, ErrMsgCodesConstants } from "eau-core";
import { PersonNames } from "../models/ModelsAutoGenerated";
import { DocumentFormValidationContext } from "./DocumentFormValidationContext";

export class PersonNamesValidator extends EAUBaseValidator<PersonNames, DocumentFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.first).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, PersonNames, 'first'));

        this.ruleFor(m => m.first).length(0, 60)
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldCanNotContainsMoreThanSymbols, PersonNames, 'first', 60));

        this.ruleFor(m => m.first).matches("^[А-Яа-я]+([' -]+[А-Яа-я]+)*$")
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldCyrillicNameMustContainsSymbols, PersonNames, 'first'));

        this.ruleFor(m => m.middle).length(0, 60)
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldCanNotContainsMoreThanSymbols, PersonNames, 'middle', 60));

        this.ruleFor(m => m.middle).matches("^[А-Яа-я]+([' -]+[А-Яа-я]+)*$")
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldCyrillicNameMustContainsSymbols, PersonNames, 'middle'));

        this.ruleFor(m => m.last).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, PersonNames, 'last'));

        this.ruleFor(m => m.last).length(0, 60)
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldCanNotContainsMoreThanSymbols, PersonNames, 'last', 60));

        this.ruleFor(m => m.last).matches("^[А-Яа-я]+([' -]+[А-Яа-я]+)*$")
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldCyrillicNameMustContainsSymbols, PersonNames, 'last'));

        this.ruleFor(m => m.pseudonim).matches("^[А-Яа-я]+([' -]+[А-Яа-я]+)*$")
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldCyrillicNameMustContainsSymbols, PersonNames, 'pseudonim'));
    }

    public validate(obj: PersonNames): boolean {
        //if ((obj.last && obj.last.length <= 0 && obj.middle && obj.middle.length <= 0)) {
        //    EauDocumentResourceHelpers.formatErrorMessage("DOC_InvalidEGN, new models.PersonNames(), 'last');
        //}

        return super.validate(obj);
    }
}