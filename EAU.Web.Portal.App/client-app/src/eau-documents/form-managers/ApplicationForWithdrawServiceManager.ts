import { ResourceHelpers } from 'eau-core';
import { ApplicationFormManagerBase, DocumentFormValidationContext, Section, ServiceTermType } from 'eau-documents';
import { action } from 'mobx';
import { ApplicationForWithdrawServiceVM } from '../models/ModelsAutoGenerated';
import { ApplicationForWithdrawServiceDataUI } from '../ui/section-forms/ApplicationForWithdrawServiceDataUI';
import { ApplicationForWithdrawServiceDataValidator } from '../validations/ApplicationForWithdrawServiceDataValidator';

export class ApplicationForWithdrawServiceManager
    extends ApplicationFormManagerBase<ApplicationForWithdrawServiceVM>{

    //#region ApplicationFormManagerBase

    protected createDocument(obj: any): ApplicationForWithdrawServiceVM {
        return new ApplicationForWithdrawServiceVM(obj);
    }

    //#endregion

    @action protected initDocumentForm() {
        super.initDocumentForm();
    }

    protected createSections(validationContext: DocumentFormValidationContext): Section[] {
        var sections: Section[] = [];
        var applicant = super.createSections(validationContext).shift();

        sections.push(applicant);

        var circumstances = new Section();
        circumstances.code = "circumstances";
        circumstances.title = ResourceHelpers.getResourceByProperty(m => m.circumstances, this.documentForm);
        circumstances.form = this.documentForm.circumstances;
        circumstances.formUICmp = ApplicationForWithdrawServiceDataUI;
        circumstances.validator = new ApplicationForWithdrawServiceDataValidator();
        circumstances.validator.setValidationContext(validationContext);
        circumstances.validate = () => this.validateSection(circumstances);

        sections.splice(1, 0, circumstances);

        return sections;
    }
}