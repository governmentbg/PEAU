import * as React from "react";
import { observer } from "mobx-react";
import { ObjectHelper } from "cnsys-core";
import { BaseProps } from "cnsys-ui-react";
import { PersonNames } from "../../models/ModelsAutoGenerated"
import { EAUBaseComponent, attributesClassFormControlRequiredLabel, attributesClassFormControlLabel, attributesClassFormControlReqired } from "eau-core";

interface PersonNamesUIProps extends BaseProps {
}

@observer export class PersonNamesUI extends EAUBaseComponent<PersonNamesUIProps, PersonNames> {
    constructor(props: PersonNamesUIProps) {
        super(props);
    }

    renderEdit(): JSX.Element {
        return (
            <div className = "row">
                <div className="form-group col-sm-4">
                    {/** Собствено име */}
                    {this.labelFor(m => m.first, null, attributesClassFormControlRequiredLabel)} 
                    {this.textBoxFor(m => m.first, attributesClassFormControlReqired)}
                </div>
                <div className="form-group col-sm-4">
                    {/** Бащино име */}
                    {this.labelFor(m => m.middle, null, attributesClassFormControlLabel)}
                    {this.textBoxFor(m => m.middle)}
                </div>
                <div className="form-group col-sm-4">
                    {/** Фамилно име */}
                    {this.labelFor(m => m.last, null, attributesClassFormControlRequiredLabel)}
                    {this.textBoxFor(m => m.last, attributesClassFormControlReqired)}
                </div>
            </div>
        );
    }

    renderDisplay(): JSX.Element {
        let propArr: string[] = ['first', 'middle', 'last'];

        return (
            <div className="form-group col-sm-4">
                <h4 className="form-control-label">{this.getResource('GL_NAME_L')}</h4>
                <p className="field-text">{`${ObjectHelper.isStringNullOrEmpty(this.model.first) ? '' : this.model.first} ${ObjectHelper.isStringNullOrEmpty(this.model.middle) ? '' : this.model.middle} ${ObjectHelper.isStringNullOrEmpty(this.model.last) ? '' : this.model.last}`}</p>
                {this.propertiesErrorsDispleyFor(propArr)}
            </div>
            );
    }
}