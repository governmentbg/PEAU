import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlRequiredLabel, EAUBaseComponent, attributesClassFormControlReqired } from "eau-core";
import React from "react";
import { ElectronicStatementAuthorVM, PersonAndEntityChoiceType } from "../../models/ModelsAutoGenerated";
import { FieldFormUI } from "./FieldFormUI";
import { PersonAndEntityBasicDataUI } from "./PersonAndEntityBasicDataUI";

export class ElectronicStatementAuthorUI extends EAUBaseComponent<BaseProps, ElectronicStatementAuthorVM> {

    renderEdit(): JSX.Element {
        if (this.model && this.model.selectedChoiceType == PersonAndEntityChoiceType.Person) {
            return (
                <FieldFormUI title={this.getResourceByProperty(m => m)} required>
                    <PersonAndEntityBasicDataUI {...this.bind(m => m)} viewMode={ViewMode.Display} />
                    <div className="row">
                        <div className="form-group col-12">
                            {/** Адрес на електронна поща за получаване на съобщения */}
                            {this.labelFor(m => m.emailAddress, null, attributesClassFormControlRequiredLabel)}
                            {this.textBoxFor(m => m.emailAddress, attributesClassFormControlReqired)}
                        </div>
                    </div>
                </FieldFormUI>
            );
        }

        return null;
    }

    renderDisplay(): JSX.Element {
        if (this.model && this.model.selectedChoiceType == PersonAndEntityChoiceType.Person) {
            return (
                <FieldFormUI title={this.getResourceByProperty(m => m)} >
                    <PersonAndEntityBasicDataUI {...this.bind(m => m)} viewMode={ViewMode.Display} />
                    <div className="row">
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{this.getResourceByProperty(m => m.emailAddress)}</h4>
                            {this.textDisplayFor(m => m.emailAddress)}
                        </div>
                    </div>
                </FieldFormUI>
            );
        }

        return null;
    }
}