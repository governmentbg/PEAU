import { ObjectHelper } from "cnsys-core";
import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlLabel, attributesClassFormControlRequiredLabel, EAUBaseComponent } from "eau-core";
import React from "react";
import { PersonalInformationVM } from "../../models/ModelsAutoGenerated";
import { FieldFormUI } from "./FieldFormUI";
import { GraoAddressUI } from "./GraoAddressUI";

interface PersonalInformationProps extends BaseProps {
    sectionTitle?: string;
    addressInfoText?: string;
    required?: boolean;
}

export class PersonalInformationUI extends EAUBaseComponent<PersonalInformationProps, PersonalInformationVM> {

    renderEdit(): JSX.Element {
        return <FieldFormUI title={this.props.sectionTitle} required={this.props.required}>
            <FieldFormUI title={this.getResourceByProperty(m => m.personAddress)} headerType={"h4"}>
                {
                    this.props.addressInfoText
                        ? <div className="alert alert-info"><p>{this.props.addressInfoText}</p></div>
                        : null
                }
                <GraoAddressUI {...this.bind(m => m.personAddress)} />
            </FieldFormUI>
            <div className="row">
                <div className="form-group col-sm-10 col-lg-6">
                    {this.labelFor(x => x.mobilePhone, "GL_PHONE_L", attributesClassFormControlLabel)}
                    {this.textBoxFor(x => x.mobilePhone)}
                </div>
            </div>
        </FieldFormUI>
    }

    renderDisplay(): JSX.Element {
        return <>
            <FieldFormUI title={this.props.sectionTitle} >
                <div className="row">
                    <div className="form-group col-12">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.personAddress)}</h4>
                        <GraoAddressUI {...this.bind(m => m.personAddress)} />
                    </div>
                </div>
                {
                    !ObjectHelper.isStringNullOrEmpty(this.model.mobilePhone)
                        ?
                        <div className="row">
                            <div className="form-group col-12">
                                <h4 className="form-control-label">{this.getResource("GL_PHONE_L")}</h4>
                                {this.textDisplayFor(x => x.mobilePhone)}
                            </div>
                        </div>
                        : null
                }
            </FieldFormUI>
        </>
    }
}

interface PersonalInformationPreviewProps extends BaseProps {
    sectionTitle?: string;
    notRequiredPhone?: boolean;
}

export class PersonalInformationPreviewUI extends EAUBaseComponent<PersonalInformationPreviewProps, PersonalInformationVM> {

    renderEdit(): JSX.Element {
        return <FieldFormUI title={this.props.sectionTitle}>
            <div className="row">
                <div className="form-group col-12">
                    <h4 className="form-control-label">{this.getResource("DOC_GL_PERMANENT_CURRENT_ADDRESS_L")}</h4>
                    <GraoAddressUI {...this.bind(m => m.personAddress)} viewMode={ViewMode.Display} />
                </div>
            </div>
            <div className="row">
                <div className="form-group col-sm-10 col-lg-6">
                    {this.labelFor(x => x.mobilePhone, "GL_PHONE_L", this.props.notRequiredPhone ? attributesClassFormControlLabel : attributesClassFormControlRequiredLabel)}
                    {this.textBoxFor(x => x.mobilePhone)}
                </div>
            </div>
        </FieldFormUI>
    }

    renderDisplay(): JSX.Element {
        return <FieldFormUI title={this.props.sectionTitle}>
            <div className="row">
                <div className="form-group col-12">
                    <h4 className="form-control-label">{this.getResource("DOC_GL_PERMANENT_CURRENT_ADDRESS_L")}</h4>
                    <GraoAddressUI {...this.bind(m => m.personAddress)} />
                </div>
            </div>
            <div className="row">
                <div className="form-group col-12">
                    <h4 className="form-control-label">{this.getResource("GL_PHONE_L")}</h4>
                    <p className="field-text">{this.textDisplayFor(x => x.mobilePhone)}</p>
                </div>
            </div>
        </FieldFormUI>
    }
}