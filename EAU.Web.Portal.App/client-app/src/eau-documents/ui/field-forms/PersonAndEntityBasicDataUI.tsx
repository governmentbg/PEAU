import * as React from "react";
import { observer } from "mobx-react";
import { BaseProps } from "cnsys-ui-react";
import { PersonAndEntityBasicDataVM, PersonAndEntityChoiceType } from "../../models/ModelsAutoGenerated"
import { EAUBaseComponent } from "eau-core";
import { PersonBasicDataUI } from "./PersonBasicDataUI";
import { EntityBasicDataUI } from './EntityBasicDataUI';

interface PersonAndEntityBasicDataUIProps extends BaseProps {
    skipPersonIdentityDocumentBasicData?: boolean;
}

@observer export class PersonAndEntityBasicDataUI extends EAUBaseComponent<PersonAndEntityBasicDataUIProps, PersonAndEntityBasicDataVM> {
    constructor(props: PersonAndEntityBasicDataUIProps) {
        super(props);

        //Bind
        this.getPersonAndEntityUI = this.getPersonAndEntityUI.bind(this);
    }

    renderEdit(): JSX.Element {
        return (<>{this.getPersonAndEntityUI()}</>);
    }

    renderDisplay(): JSX.Element {
        return (<>{this.getPersonAndEntityUI()}</>);
    }

    private getPersonAndEntityUI(): any {
        let personAndEntityUI: any;

        switch (this.model.selectedChoiceType) {
            case (PersonAndEntityChoiceType.Person):
                if (this.props.skipPersonIdentityDocumentBasicData)
                    personAndEntityUI = (<PersonBasicDataUI {...this.bind(m => m.itemPersonBasicData)} viewMode={this.props.viewMode} skipIdentityDocumentBasicData={this.props.skipPersonIdentityDocumentBasicData} />);
                else
                    personAndEntityUI = (<PersonBasicDataUI {...this.bind(m => m.itemPersonBasicData)} viewMode={this.props.viewMode} />);
                break;
            case (PersonAndEntityChoiceType.ForeignPerson):
                personAndEntityUI = null;
                break;
            case (PersonAndEntityChoiceType.Entity):
                personAndEntityUI = (<EntityBasicDataUI {...this.bind(m => m.itemEntityBasicData)} viewMode={this.props.viewMode} />);
                break;
            case (PersonAndEntityChoiceType.ForeignEntity):
                personAndEntityUI = null;
                break;
            default:
                personAndEntityUI = null;
                break;
        }

        return personAndEntityUI;
    }
}