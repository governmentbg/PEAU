import { BindableReference, ObjectHelper } from "cnsys-core";
import { BaseProps, ViewMode } from "cnsys-ui-react";
import { resourceManager } from "eau-core";
import React, { Fragment } from "react";
import { DocumentFormManagerProps } from "./DocumentFormManagerProvider";
import { DigitalSignatureContainerVM, TimeStampInfo, OfficialVM } from "../../models/ModelsAutoGenerated";
import { UncontrolledCollapse } from "reactstrap";
import moment from "moment";

interface DocumentFormPreviewUIProps extends BaseProps, DocumentFormManagerProps {
    errors?: Error[]
    onChangeSection: (code: string) => void
    getAttachedDocDounloadUrl?: (id: number) => Promise<string>
}

export function DocumentFormPreviewUI(props: DocumentFormPreviewUIProps): JSX.Element {
    var signatures: (OfficialVM | DigitalSignatureContainerVM)[] = (props.documentFormManager.documentForm as any).digitalSignatures;

    return (
        <>
            {props.documentFormManager.additionalData.documentURI && !props.documentFormManager.documentForm.documentURI && props.documentFormManager.sections.length > 1 ?
                <div className="row">
                    <div className="form-group col-12">
                        <h2 className="page-subtitle">
                            {resourceManager.getResourceByKey("GL_URI_L")} {props.documentFormManager.additionalData.documentURI}
                        </h2>
                        <p className="page-date">{resourceManager.getResourceByKey("GL_DATE_L")} {props.documentFormManager.additionalData.documentDate} г.
                                        </p>
                    </div>
                </div>
                : null}
            {props.documentFormManager.sections.map(item => {
                var itemProps = {
                    viewMode: ViewMode.Display,
                    fullHtmlName: item.code,
                    modelReference: new BindableReference(item.form)
                }

                if (item.code == 'attachedDocuments') {
                    itemProps['getDocumentDownloadUrl'] = props.getAttachedDocDounloadUrl;

                    if (item.errors && item.errors.length > 0) {
                        let attachedDocsErrors: string[] = [];

                        for (let i: number = 0; i < item.errors.length; i++) {
                            attachedDocsErrors.push(item.errors[i].error);
                        }

                        itemProps['sectionErrors'] = attachedDocsErrors;
                    }
                }

                return (
                    <section id={item.code + "documentPreviewSection"} key={item.code} className="interactive-container" >
                        <div className="interactive-container__content">
                            {props.documentFormManager.sections.length > 1 ? <h2 className="section-title">{item.title}</h2> : null}
                            {React.createElement(item.formUICmp, itemProps)}
                        </div>
                        {props.onChangeSection &&
                            <div className="interactive-container__controls">

                                <button className="btn btn-light btn-sm" title={resourceManager.getResourceByKey("GL_EDITING_L")} onFocus={() => onHover(this, item.code)} onBlur={() => onHoverLeave(this, item.code)} onMouseOver={() => onHover(this, item.code)} onMouseLeave={() => onHoverLeave(this, item.code)} onClick={() => props.onChangeSection(item.code)}>
                                    <i className="ui-icon ui-icon-edit" aria-hidden="true"></i>
                                    <span className="d-none">{resourceManager.getResourceByKey("GL_EDITING_L")}</span>
                                </button>
                            </div>}
                    </section>
                )

            })}
            <DocumentSignaturesPreviewUI signatures={signatures} />
        </>
    );
}


function onHover(e: any, index: any) {
    $("#" + index + "documentPreviewSection").addClass("interactive-container--focus");
}

function onHoverLeave(e: any, index: any) {
    $("#" + index + "documentPreviewSection").removeClass("interactive-container--focus");
}


interface DocumentSignaturesPreviewUIProps {
    signatures: (OfficialVM | DigitalSignatureContainerVM)[];
}

export function DocumentSignaturesPreviewUI(props: DocumentSignaturesPreviewUIProps): JSX.Element {
    if (!props.signatures || props.signatures.length == 0)
        return null;

    let isOfficialVM: boolean = !ObjectHelper.isNullOrUndefined((props.signatures[0] as any).personNames);

    return (
        <>
            {props.signatures.map((sign: any, idx: number) => {
                return (
                    <Fragment key={idx}>
                        {isOfficialVM
                            &&
                            <fieldset className="fields-group">
                                <legend>
                                    <h3 className="field-title">
                                        {ObjectHelper.isStringNullOrEmpty(sign.electronicDocumentAuthorQuality) ?
                                            resourceManager.getResourceByKey('GL_OfficialPerson_L')
                                            :
                                            sign.electronicDocumentAuthorQuality}
                                    </h3>
                                </legend>
                                <div className="row">
                                    <div className="form-group col-12">
                                        <p className="field-text">
                                            {`${sign.personNames.first}${ObjectHelper.isStringNullOrEmpty(sign.personNames.middle) ? '' : ' ' + sign.personNames.middle} ${sign.personNames.last}`}
                                            {!ObjectHelper.isStringNullOrEmpty(sign.position) && `, ${sign.position}`}
                                        </p>
                                    </div>
                                </div>
                            </fieldset>}
                        {sign.signature &&
                            <fieldset className="fields-group">
                                <legend>
                                    <h3 className="field-title">{resourceManager.getResourceByKey('GL_DIGITAL_SIGNATURE_L')}</h3>
                                </legend>
                                <div className="form-group">
                                    <button id={`signToggler${idx}`} className="btn btn-link" type="button">
                                        {resourceManager.getResourceByKey("GL_SHOW_L")}
                                    </button>
                                </div>
                                <UncontrolledCollapse toggler={`signToggler${idx}`}>
                                    <fieldset className="fields-group">
                                        <legend>
                                            <h3 className="field-title">{resourceManager.getResourceByKey('GL_DIGITAL_SIGNATURE_L')}</h3>
                                        </legend>
                                        <div className="row">
                                            <div className="form-group col-sm-4">
                                                <h4 className="form-control-label">{resourceManager.getResourceByKey('GL_DIGITAL_SIGNATURE_TIME_L')}</h4>
                                                <p className="field-text">{ObjectHelper.isNullOrUndefined(sign.signature.signatureTime) ? '' : moment(sign.signature.signatureTime).format('LLLL')}</p>
                                            </div>
                                            <div className="form-group col-sm-4">
                                                <h4 className="form-control-label">{resourceManager.getResourceByKey('GL_DIGITAL_SIGNATURE_VALIDITY_L')}</h4>
                                                <p className="field-text">{sign.signature.isValid ? resourceManager.getResourceByKey("GL_OK_L") : sign.signature.error}</p>
                                            </div>
                                        </div>
                                        <div className="row">
                                            <div className="form-group col-sm-4">
                                                <h4 className="form-control-label">{resourceManager.getResourceByKey('GL_SERIAL_NUMBER_L')}</h4>
                                                <p className="field-text word-break">{sign.signature.signingCertificateData.serialNumber}</p>
                                            </div>
                                            <div className="form-group col-sm-4">
                                                <h4 className="form-control-label">{resourceManager.getResourceByKey('GL_VALID_FROM_L')}</h4>
                                                <p className="field-text">{moment(sign.signature.signingCertificateData.validFrom).format('LLLL')}</p>
                                            </div>
                                            <div className="form-group col-sm-4">
                                                <h4 className="form-control-label">{resourceManager.getResourceByKey('GL_EXPIRE_DATE_L')}</h4>
                                                <p className="field-text">{moment(sign.signature.signingCertificateData.validTo).format('LLLL')}</p>
                                            </div>
                                        </div>
                                        <div className="row">
                                            <div className="form-group col-sm-4">
                                                <h3 className="form-control-label">{resourceManager.getResourceByKey('GL_ISSUER_INFO_L')}</h3>
                                                <p className="field-text">{sign.signature.signingCertificateData.issuer}</p>
                                            </div>

                                            <div className="form-group col-sm-4">
                                                <h3 className="form-control-label">{resourceManager.getResourceByKey('GL_AUTHOR_INFO_L')}</h3>
                                                <p className="field-text">{sign.signature.signingCertificateData.subject}</p>
                                            </div>

                                            <div className="form-group col-sm-4">
                                                <h3 className="form-control-label">{resourceManager.getResourceByKey('GL_AUTHOR_INFO_ADDITIONAL_L')}</h3>
                                                <p className="field-text">{sign.signature.signingCertificateData.subjectAlternativeName}</p>
                                            </div>
                                        </div>
                                    </fieldset>
                                    {sign.signature.timeStampInfos
                                        && sign.signature.timeStampInfos.length > 0
                                        && sign.signature.timeStampInfos.map((timestamp: TimeStampInfo) => {
                                            return (
                                                <fieldset key={timestamp.signingCertificateData.serialNumber} className="fields-group">
                                                    <legend>
                                                        <h3 className="field-title">TimeStamp</h3>
                                                    </legend>
                                                    <div className="row">
                                                        <div className="form-group col-12">
                                                            <h4 className="form-control-label">{resourceManager.getResourceByKey('GL_TIMESTAMP_TIME_L')}</h4>
                                                            <p className="field-text">{moment(timestamp.timeStampTime).format('LLLL')}</p>
                                                        </div>
                                                    </div>
                                                    <div className="row">
                                                        <div className="form-group col-sm-4">
                                                            <h4 className="form-control-label">{resourceManager.getResourceByKey('GL_SERIAL_NUMBER_L')}</h4>
                                                            <p className="field-text word-break">{timestamp.signingCertificateData.serialNumber}</p>
                                                        </div>
                                                        <div className="form-group col-sm-4">
                                                            <h4 className="form-control-label">{resourceManager.getResourceByKey('GL_VALID_FROM_L')}</h4>
                                                            <p className="field-text">{moment(timestamp.signingCertificateData.validFrom).format('LLLL')}</p>
                                                        </div>
                                                        <div className="form-group col-sm-4">
                                                            <h4 className="form-control-label">{resourceManager.getResourceByKey('GL_EXPIRE_DATE_L')}</h4>
                                                            <p className="field-text">{moment(timestamp.signingCertificateData.validTo).format('LLLL')}</p>
                                                        </div>
                                                    </div>
                                                    <div className="row">
                                                        <div className="form-group col-sm-4">
                                                            <h3 className="form-control-label">{resourceManager.getResourceByKey('GL_ISSUER_INFO_L')}</h3>
                                                            <p className="field-text">{timestamp.signingCertificateData.issuer}</p>
                                                        </div>

                                                        <div className="form-group col-sm-4">
                                                            <h3 className="form-control-label">{resourceManager.getResourceByKey('GL_AUTHOR_INFO_L')}</h3>
                                                            <p className="field-text">{timestamp.signingCertificateData.subject}</p>
                                                        </div>

                                                        <div className="form-group col-sm-4">
                                                            <h3 className="form-control-label">{resourceManager.getResourceByKey('GL_AUTHOR_INFO_ADDITIONAL_L')}</h3>
                                                            <p className="field-text">{timestamp.signingCertificateData.subjectAlternativeName}</p>
                                                        </div>
                                                    </div>
                                                </fieldset>);
                                        })}
                                </UncontrolledCollapse>
                            </fieldset>}
                    </Fragment>);
            })}
        </>);
}
