import { EAUBaseValidator, ErrMsgCodesConstants, ResourceHelpers } from "eau-core";
import { DocumentFormValidationContext } from "eau-documents";
import { TechnicalSpecificationOfWeapon } from "../models/ModelsAutoGenerated";

export class TechnicalSpecificationOfWeaponValidator extends EAUBaseValidator<TechnicalSpecificationOfWeapon, DocumentFormValidationContext> {

    constructor() {
        super();

        this.ruleFor(m => m.make).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new TechnicalSpecificationOfWeapon(), 'make'));

        this.ruleFor(m => m.caliber).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new TechnicalSpecificationOfWeapon(), 'caliber'));

        this.ruleFor(m => m.weaponNumber).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new TechnicalSpecificationOfWeapon(), 'weaponNumber'));

        this.ruleFor(m => m.weaponNumber).match(/^[^@?]+$/g)
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.NotAllowedQuestionmarksAndAT, new TechnicalSpecificationOfWeapon(), 'weaponNumber'));
    }
}