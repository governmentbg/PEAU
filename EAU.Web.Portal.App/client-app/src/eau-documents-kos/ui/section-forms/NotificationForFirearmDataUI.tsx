import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlReqired, attributesClassFormControlRequiredLabel, EAUBaseComponent, resourceManager } from "eau-core";
import { ApplicationFormManagerProps, ApplicationType, ElectronicServiceAuthorQualityType, FieldFormUI, PersonalInformationPreviewUI, PersonalInformationUI, PoliceDepartmentUI, withDocumentFormManager } from "eau-documents";
import React from "react";
import { NotificationForFirearmDataVM } from "../../models/ModelsAutoGenerated";
import { TechnicalSpecificationsOfWeaponsUI } from "../field-forms/TechnicalSpecificationsOfWeaponsUI";

interface NotificationForFirearmDataProps extends BaseProps, ApplicationFormManagerProps {
}

export class NotificationForFirearmDataImpl extends EAUBaseComponent<NotificationForFirearmDataProps, NotificationForFirearmDataVM> {

    renderEdit(): JSX.Element {
        return <>
            {
                this.props.documentFormManager.applicationType != ApplicationType.AppForFirstReg
                    ? <FieldFormUI title={this.getResourceByProperty(m => m.issuingPoliceDepartment)}>
                        <PoliceDepartmentUI {...this.bind(m => m.issuingPoliceDepartment, ViewMode.Display)} />
                    </FieldFormUI>
                    : <FieldFormUI title={this.getResourceByProperty(m => m.issuingPoliceDepartment)} required>
                        <PoliceDepartmentUI {...this.bind(m => m.issuingPoliceDepartment)} />
                    </FieldFormUI>
            }
            {
                this.props.documentFormManager.getSelectedAuthorQuality == ElectronicServiceAuthorQualityType.Personal
                    ? <PersonalInformationPreviewUI {...this.bind(m => m.applicantInformation)} sectionTitle={this.getResourceByProperty(m => m.applicantInformation)} notRequiredPhone />
                    : <PersonalInformationUI {...this.bind(m => m.applicantInformation)}
                        addressInfoText={this.getResource("DOC_KOS_ADDRESS_TEXT_2_I")}
                        sectionTitle={this.getResourceByProperty(m => m.applicantInformation)}
                        required
                    />
            }
            <FieldFormUI title={this.getResourceByProperty(m => m.technicalSpecificationsOfWeapons)}>
                <TechnicalSpecificationsOfWeaponsUI {...this.bind(m => m.technicalSpecificationsOfWeapons)} />
            </FieldFormUI>
            <FieldFormUI title={this.getResourceByProperty(m => m.purchaserUIC)}>
                <div className="row">
                    <div className="form-group col-sm-6">
                        {this.labelFor(x => x.purchaserUIC, 'GL_UIC_L', attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(x => x.purchaserUIC, attributesClassFormControlReqired)}
                    </div>
                </div>
            </FieldFormUI>
            <fieldset className="fields-group">
                <div className="row mt-2">
                    <div className="col-12">
                        <legend>
                            <h3 className="field-title">
                                {resourceManager.getResourceByKey("DOC_GL_ReceiveERefusal_L")}
                            </h3>
                        </legend>
                        <div className="custom-control custom-checkbox">
                            {this.checkBoxFor(m => m.agreementToReceiveERefusal)}
                        </div>
                    </div>
                </div>
            </fieldset>
        </>
    }

    renderDisplay(): JSX.Element {
        return <>
            <FieldFormUI title={this.getResourceByProperty(m => m.issuingPoliceDepartment)}>
                <PoliceDepartmentUI {...this.bind(m => m.issuingPoliceDepartment)} />
            </FieldFormUI>
            <PersonalInformationUI {...this.bind(m => m.applicantInformation)}
                addressInfoText={this.getResource("DOC_KOS_ADDRESS_TEXT_2_I")}
                sectionTitle={this.getResourceByProperty(m => m.applicantInformation)}
                required
            />
            <FieldFormUI title={this.getResourceByProperty(m => m.technicalSpecificationsOfWeapons)}>
                <TechnicalSpecificationsOfWeaponsUI {...this.bind(m => m.technicalSpecificationsOfWeapons)} />
            </FieldFormUI>
            <FieldFormUI title={this.getResourceByProperty(m => m.purchaserUIC)}>
                <div className="row">
                    <div className="form-group col-12">
                        <h4 className="form-control-label">{this.getResource("GL_UIC_L")}</h4>
                        {this.textDisplayFor(x => x.purchaserUIC)}
                    </div>
                </div>
            </FieldFormUI>
            {
                this.model.agreementToReceiveERefusal && <FieldFormUI>
                    <legend>
                        <h3 className="field-title">
                            {resourceManager.getResourceByKey("DOC_GL_ReceiveERefusal_L")}
                        </h3>
                    </legend>
                    <p className="field-text check-item check-success">{this.getResourceByProperty(m => m.agreementToReceiveERefusal)}</p>
                </FieldFormUI>
            }
        </>
    }
}

export const NotificationForFirearmDataUI = withDocumentFormManager(NotificationForFirearmDataImpl)