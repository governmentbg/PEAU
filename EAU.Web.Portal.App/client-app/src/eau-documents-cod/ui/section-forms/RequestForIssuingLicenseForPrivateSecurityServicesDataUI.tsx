import { ObjectHelper } from "cnsys-core";
import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlLabel, EAUBaseComponent, resourceManager } from "eau-core";
import { ApplicationFormManagerProps, ApplicationType, EkatteAddressUI, PoliceDepartmentUI, withDocumentFormManager, FieldFormUI } from "eau-documents";
import { observer } from "mobx-react";
import React from "react";
import { RequestForIssuingLicenseForPrivateSecurityServicesDataVM } from "../../models/ModelsAutoGenerated";
import { SecurityServiceTypesCollectionUI } from "../field-forms";

interface RequestForIssuingLicenseForPrivateSecurityServicesDataUIProps extends BaseProps, ApplicationFormManagerProps {
}

@observer export class RequestForIssuingLicenseForPrivateSecurityServicesDataImpl
    extends EAUBaseComponent<RequestForIssuingLicenseForPrivateSecurityServicesDataUIProps, RequestForIssuingLicenseForPrivateSecurityServicesDataVM> {

    renderEdit(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.issuingPoliceDepartment)}>
                    <div className="row">
                        <div className="form-group col-12">
                            <PoliceDepartmentUI  {...this.bind(m => m.issuingPoliceDepartment, ViewMode.Display)} />
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m)} required>
                    <FieldFormUI title={this.getResourceByProperty(m => m.entityManagementAddress)} required headerType="h4">
                        <EkatteAddressUI  {...this.bind(m => m.entityManagementAddress)} />
                    </FieldFormUI>
                    <FieldFormUI title={this.getResourceByProperty(m => m.correspondingAddress)} required headerType="h4">
                        <EkatteAddressUI  {...this.bind(m => m.correspondingAddress)} />
                    </FieldFormUI>
                    <div className="row">
                        <div className="form-group col-sm-10 col-lg-6">
                            {this.labelFor(m => m.mobilePhone, null, attributesClassFormControlLabel)}
                            {this.textBoxFor(m => m.mobilePhone)}
                        </div>
                    </div>
                </FieldFormUI>
                <SecurityServiceTypesCollectionUI {...this.bind(m => m)} viewMode={this.props.documentFormManager.applicationType == ApplicationType.AppForRemoveInvalidData ? ViewMode.Display : ViewMode.Edit} />
                <fieldset className="fields-group">
                    <div className="row mt-2">
                        <div className="col-12">
                            <legend>
                                <h3 className="field-title">
                                    {resourceManager.getResourceByKey("DOC_GL_ReceiveERefusal_L")}
                                </h3>
                            </legend>
                            <div className="custom-control custom-checkbox">
                                {this.checkBoxFor(m => m.agreementToReceiveERefusal)}
                            </div>
                        </div>
                    </div>
                </fieldset>
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.issuingPoliceDepartment)}>
                    <div className="row">
                        <div className="form-group col-12">
                            <PoliceDepartmentUI  {...this.bind(m => m.issuingPoliceDepartment)} />
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m)}>
                    <div className="row">
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{this.labelFor(m => m.entityManagementAddress)}</h4>
                            <EkatteAddressUI  {...this.bind(m => m.entityManagementAddress)} />
                        </div>
                    </div>
                    <div className="row">
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{this.labelFor(m => m.correspondingAddress)}</h4>
                            <EkatteAddressUI  {...this.bind(m => m.correspondingAddress)} />
                        </div>
                    </div>
                    {
                        !ObjectHelper.isStringNullOrEmpty(this.model.mobilePhone) && <div className="row">
                            <div className="form-group col-12">
                                <h4 className="form-control-label"> {this.labelFor(m => m.mobilePhone)}</h4>
                                {this.textDisplayFor(m => m.mobilePhone)}
                            </div>
                        </div>
                    }
                </FieldFormUI>
                <SecurityServiceTypesCollectionUI {...this.bind(m => m)} />
                {this.model.agreementToReceiveERefusal ?
                    <fieldset className="fields-group">
                        <legend>
                            <h3 className="field-title">
                                {resourceManager.getResourceByKey("DOC_GL_ReceiveERefusal_L")}
                            </h3>
                        </legend>
                        <div className="row mt-2">
                            <div className="form-group col-12">
                                <p className="field-text check-item check-success">
                                    {this.getResourceByProperty(m => m.agreementToReceiveERefusal)}
                                </p>
                            </div>
                        </div>
                    </fieldset>
                    : null}
            </>
        );
    }
}

export const RequestForIssuingLicenseForPrivateSecurityServicesDataUI = withDocumentFormManager(RequestForIssuingLicenseForPrivateSecurityServicesDataImpl);