import { ObjectHelper } from "cnsys-core";
import { BaseProps } from "cnsys-ui-react";
import { EAUBaseComponent } from "eau-core";
import { observer } from "mobx-react";
import React from "react";
import { SecurityObjectsDataVM, SecurityObject } from "../../models/ModelsAutoGenerated";
import { SecurityObjectDataTerminationUI } from "./SecurityObjectDataUI";
import { SecurityObjectModalUI } from "./security-object-search/SecurityObjectModalUI";
import { EntityBasicData } from "eau-documents";


interface ITerminationSecurityObjectsWrapperProps extends BaseProps {
	applicant: EntityBasicData
}

@observer
export class TerminationSecurityObjectsWrapperUI extends EAUBaseComponent<ITerminationSecurityObjectsWrapperProps, SecurityObjectsDataVM>{

	constructor(props?: ITerminationSecurityObjectsWrapperProps) {
		super(props);

		this.addAnotherSecurityObject = this.addAnotherSecurityObject.bind(this);
		this.addSecurityObject = this.addSecurityObject.bind(this);
	}

	private addAnotherSecurityObject() {
		
		this.model.securityObjects.push(new SecurityObject());
	}

	private addSecurityObject(securityObjects: SecurityObject[]) {

		securityObjects.forEach(el => {
			this.model.securityObjects.push(el);
		})
	}

	render() {
		return (
			<>
				{!ObjectHelper.isArrayNullOrEmpty(this.model.securityObjects) && <SecurityObjectDataTerminationUI {...this.bind(x => x.securityObjects)} />}

				<SecurityObjectModalUI 
					{...this.bind(x => x)} 
					addAnotherSecurityObjectCallback={this.addAnotherSecurityObject} 
					addSecurityObjectCallback={this.addSecurityObject}
					adedSecurityObjects={this.model.securityObjects}
					applicant={this.props.applicant}
				/>
			</>
		);
	}
}
