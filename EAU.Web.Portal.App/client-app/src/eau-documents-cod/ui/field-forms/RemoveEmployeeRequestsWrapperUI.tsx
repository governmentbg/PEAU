import { ObjectHelper } from "cnsys-core";
import { BaseProps } from "cnsys-ui-react";
import { EAUBaseComponent } from "eau-core";
import { observer } from "mobx-react";
import React from "react";
import { NotificationForConcludingOrTerminatingEmploymentContractDataVM, RemoveEmployeeRequest } from "../../models/ModelsAutoGenerated";
import { RemoveEmployeeRequestsUI } from "./RemoveEmployeeRequestsUI";
import { EmployeeSearchUI } from "./employee-search/EmployeeSearchUI";
import { EntityBasicData } from "eau-documents";


interface IRemoveEmployeeRequestsWrapperProps extends BaseProps {
	applicant: EntityBasicData
}
@observer
export class RemoveEmployeeRequestsWrapperUI extends EAUBaseComponent<IRemoveEmployeeRequestsWrapperProps, NotificationForConcludingOrTerminatingEmploymentContractDataVM>{

	constructor(props?: IRemoveEmployeeRequestsWrapperProps) {
		super(props);
		this.onAdd = this.onAdd.bind(this);
		this.addAnotherEmployee = this.addAnotherEmployee.bind(this);
		this.addEmployees = this.addEmployees.bind(this);
	}

	private onAdd() {
		this.model.removeEmployeeRequests.push(new RemoveEmployeeRequest());
	}

	private addAnotherEmployee() {
		this.model.removeEmployeeRequests.push(new RemoveEmployeeRequest());
	}

	private addEmployees(employees: RemoveEmployeeRequest[]) {

		employees.forEach(el => {
			this.model.removeEmployeeRequests.push(el);
		})
	}

	render() {
		return (
			<>
				{!ObjectHelper.isArrayNullOrEmpty(this.model.removeEmployeeRequests) && <RemoveEmployeeRequestsUI {...this.bind(x => x.removeEmployeeRequests)} />}
				<EmployeeSearchUI
					{...this.bind(x => x)}
					addAnotherEmployeeCallback={this.addAnotherEmployee}
					addEmployeesCallback={this.addEmployees}
					adedEmployees={this.model.removeEmployeeRequests}
					applicant={this.props.applicant}
				/>
			</>
		);
	}
}
