import { BaseProps } from "cnsys-ui-react";
import { attributesClassFormControl, attributesClassFormControlLabel, attributesClassFormControlRequiredLabel, Constants, EAUBaseComponent } from "eau-core";
import { withCollectionItems } from "eau-documents";
import { observer } from "mobx-react";
import React from "react";
import { Employee, EmployeeIdentifierType, RemoveEmployeeRequest } from "../../models/ModelsAutoGenerated";
import { EmployeeUI } from "./EmployeeUI";

interface IRemoveEmployeeRequestsProps extends BaseProps {

}
@observer
export class RemoveEmployeeRequestsImpl extends EAUBaseComponent<IRemoveEmployeeRequestsProps, RemoveEmployeeRequest>{

    constructor(props?: IRemoveEmployeeRequestsProps) {
        super(props);
    }

    renderEdit() {
        return (
            <>
                {<EmployeeUI {...this.bind(x => x.employee)} allowedIdentifierType={EmployeeIdentifierType.EGN} />}

                <div className="row">
                    <div className="form-group col-lg-6 col-xl-7">
                        {this.labelFor(x => x.contractTerminationNumber, null, attributesClassFormControlLabel)}
                        {this.textBoxFor(x => x.contractTerminationNumber, attributesClassFormControl)}
                    </div>
                    <div className="form-group col-sm">
                        {this.labelFor(x => x.contractTerminationDate, null, attributesClassFormControlRequiredLabel)}
                        {this.dateFor(x => x.contractTerminationDate)}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(x => x.contractTerminationEffectiveDate, null, attributesClassFormControlRequiredLabel)}
                        {this.dateFor(x => x.contractTerminationEffectiveDate)}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(x => x.contractTerminationNote, null, attributesClassFormControlLabel)}
                        {this.textBoxFor(x => x.contractTerminationNote)}
                    </div>
                </div>
            </>
        );
    }

    renderDisplay() {
        return (
            <>
                <EmployeeUI {...this.bind(x => x.employee)} />
                <div className="row">
                    <div className="form-group col-sm-6">
                        <h4 className="form-control-label"> {this.getResourceByProperty(m => m.contractTerminationNumber)}</h4>
                        {this.textDisplayFor(x => x.contractTerminationNumber)}
                    </div>
                    <div className="form-group col-sm-6">
                        <h4 className="form-control-label"> {this.getResourceByProperty(m => m.contractTerminationDate)}</h4>
                        <p className="field-text">{this.dateDisplayFor(this.model.contractTerminationDate, Constants.DATE_FORMATS.date)}</p>
                        {this.propertyErrorsDispleyFor(m => m.contractTerminationDate)}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-6">
                        <h4 className="form-control-label"> {this.getResourceByProperty(m => m.contractTerminationEffectiveDate)}</h4>
                        <p className="field-text">{this.dateDisplayFor(this.model.contractTerminationEffectiveDate, Constants.DATE_FORMATS.date)}</p>
                        {this.propertyErrorsDispleyFor(m => m.contractTerminationEffectiveDate)}
                    </div>
                    <div className="form-group col-12">
                        <h4 className="form-control-label"> {this.getResourceByProperty(m => m.contractTerminationNote)}</h4>
                        {this.textDisplayFor(x => x.contractTerminationNote)}
                    </div>
                </div>
            </>
        );
    };
}

export const RemoveEmployeeRequestsUI = withCollectionItems(RemoveEmployeeRequestsImpl, {
    initItem: () => {
        let removeEmployeeRequest = new RemoveEmployeeRequest();
        removeEmployeeRequest.employee = new Employee();
        removeEmployeeRequest.employee.employeeIdentifierType = EmployeeIdentifierType.EGN;

        return removeEmployeeRequest;
    },
    addButtonLabelKey: null,
    skipButton: true,
    showDeleteButtonOnSingleElement: true
})