import { EAUBaseValidator, ErrMsgCodesConstants, ResourceHelpers } from "eau-core";
import { DocumentFormValidationContext, PoliceDepartmentValidator } from "eau-documents";
import { NotificationForTakingOrRemovingFromSecurityDataVM, NotificationType } from "../models/ModelsAutoGenerated";
import { ContractAssignorValidator } from "./ContractAssignorValidator";
import { SecurityContractDataValidator } from "./SecurityContractDataValidator";

export class NotificationForTakingOrRemovingFromSecurityDataValidator
    extends EAUBaseValidator<NotificationForTakingOrRemovingFromSecurityDataVM, DocumentFormValidationContext> {

    constructor() {
        super();

        this.ruleFor(m => m.issuingPoliceDepartment).setValidator(new PoliceDepartmentValidator());

        this.ruleFor(x => x.notificationType).notEmpty()
            .withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, new NotificationForTakingOrRemovingFromSecurityDataVM(), 'notificationType'));

        this.ruleFor(m => m.securityContractData).setValidator(new SecurityContractDataValidator());

        this.ruleFor(m => m.contractAssignor).setValidator(new ContractAssignorValidator())
            .when(m => m.notificationType == NotificationType.NewSecurityContr235789 || m.notificationType == NotificationType.TerminationSecurityContr235789);
    }
}