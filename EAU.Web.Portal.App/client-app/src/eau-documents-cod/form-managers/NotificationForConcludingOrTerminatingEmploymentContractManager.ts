import { ResourceHelpers } from 'eau-core';
import { ApplicationFormManagerBase, DocumentFormValidationContext, Section } from 'eau-documents';
import { action } from 'mobx';
import { NotificationForConcludingOrTerminatingEmploymentContractVM, NotificationOfEmploymentContractType } from '../models/ModelsAutoGenerated';
import { NotificationForConcludingOrTerminatingEmploymentContractDataUI } from '../ui/section-forms/NotificationForConcludingOrTerminatingEmploymentContractDataUI';
import { NotificationForConcludingOrTerminatingEmploymentContractDataValidator } from '../validations/NotificationForConcludingOrTerminatingEmploymentContractDataValidator';
import { ObjectHelper } from 'cnsys-core';

export class NotificationForConcludingOrTerminatingEmploymentContractManager
    extends ApplicationFormManagerBase<NotificationForConcludingOrTerminatingEmploymentContractVM>{

    //#region ApplicationFormManagerBase

    createDocument(obj: any): NotificationForConcludingOrTerminatingEmploymentContractVM {
        return new NotificationForConcludingOrTerminatingEmploymentContractVM(obj);
    }

    //#endregion

    @action protected initDocumentForm() {
        super.initDocumentForm();

        if (this.documentForm.circumstances.notificationOfEmploymentContractType == NotificationOfEmploymentContractType.Terminating && ObjectHelper.isNullOrUndefined(this.documentForm.circumstances.removeEmployeeRequests))
            this.documentForm.circumstances.removeEmployeeRequests = [];
    }

    protected createSections(validationContext: DocumentFormValidationContext): Section[] {
        var sections = super.createSections(validationContext);

        var circumstances = new Section();
        circumstances.code = "circumstances";
        circumstances.title = ResourceHelpers.getResourceByProperty(m => m.circumstances, this.documentForm);
        circumstances.form = this.documentForm.circumstances;
        circumstances.formUICmp = NotificationForConcludingOrTerminatingEmploymentContractDataUI;
        circumstances.validator = new NotificationForConcludingOrTerminatingEmploymentContractDataValidator();
        circumstances.validator.setValidationContext(validationContext);
        circumstances.validate = () => this.validateSection(circumstances);

        sections.splice(1, 0, circumstances);

        return sections;
    }
}