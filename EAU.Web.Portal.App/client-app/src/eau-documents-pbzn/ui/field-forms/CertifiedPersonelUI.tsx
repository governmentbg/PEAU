import { ObjectHelper } from "cnsys-core";
import { BaseProps } from "cnsys-ui-react";
import { attributesClassFormControlReqired, attributesClassFormControlRequiredLabel, EAUBaseComponent, ResourceHelpers } from "eau-core";
import { withCollectionItems } from "eau-documents";
import React from "react";
import { CertifiedPersonelVM } from "../../models/ModelsAutoGenerated";

class CertifiedPersonelImpl extends EAUBaseComponent<BaseProps, CertifiedPersonelVM>{

    renderEdit(): JSX.Element {

        return (
            <div className="row">
                <div className="form-group col-sm-6 col-lg-4">
                    {this.labelFor(m => m.personFirstName, null, attributesClassFormControlRequiredLabel)}
                    {this.textBoxFor(m => m.personFirstName, attributesClassFormControlReqired)}
                </div>
                <div className="form-group col-sm-6 col-lg-4">
                    {this.labelFor(m => m.personLastName, null, attributesClassFormControlRequiredLabel)}
                    {this.textBoxFor(m => m.personLastName, attributesClassFormControlReqired)}
                </div>
                <div className="form-group col-sm-6 col-lg-4">
                    {this.labelFor(m => m.certificateNumber, null, attributesClassFormControlRequiredLabel)}
                    {this.textBoxFor(m => m.certificateNumber, attributesClassFormControlReqired)}
                </div>
            </div>
        )
    }

    renderDisplay(): JSX.Element {
        let propArr: string[] = ['personFirstName', 'personLastName'];

        return (
            <div className="row">
                <div className="form-group col-sm-6 col-lg-4">
                    <h4 className="form-control-label">{this.getResource("GL_NAME_L")}</h4>
                    <p className="field-text">{`${ObjectHelper.isStringNullOrEmpty(this.model.personFirstName) ? '' : this.model.personFirstName} ${ObjectHelper.isStringNullOrEmpty(this.model.personLastName) ? '' : this.model.personLastName}`}</p>
                    {this.propertiesErrorsDispleyFor(propArr)}
                </div>                
                <div className="form-group col-sm-6 col-lg-4">
                    <h4 className="form-control-label">{ResourceHelpers.getResourceByProperty("certificateNumber", this.model)}</h4>
                    {this.textDisplayFor(m => m.certificateNumber)}
                </div>
            </div>
        )
    }
}

export const CertifiedPersonelCollectionUI = withCollectionItems(CertifiedPersonelImpl, {
    initItem: () => new CertifiedPersonelVM(),
    addButtonLabelKey: 'GL_ADD_PERSON_L'
})