import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlReqired, EAUBaseComponent, attributesClassFormControlRequiredLabel, attributesClassFormControlLabel, ResourceHelpers } from "eau-core";
import { FieldFormUI, PoliceDepartmentUI } from "eau-documents";
import { observer } from "mobx-react";
import React from "react";
import { ApplicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesDataVM, EntityOrPerson } from "../../models/ModelsAutoGenerated";
import { CertificateToWorkWithFluorinatedGreenhouseGassesPersonDataUI, CertifiedPersonelCollectionUI, DeclaredScopeOfCertificationDataUI, EntityDataUI, PersonDataUI } from "../field-forms";

interface ApplicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesDataUIProps extends BaseProps {
}

@observer export class ApplicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesDataUI
    extends EAUBaseComponent<ApplicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesDataUIProps, ApplicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesDataVM> {

    renderEdit(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.issuingPoliceDepartment)}>                   
                    <div className="row">
                        <div className="form-group col-12">
                            <PoliceDepartmentUI  {...this.bind(m => m.issuingPoliceDepartment, ViewMode.Display)} />
                        </div>
                    </div>
                </FieldFormUI>
                {this.renderPersonOrEntityDataUIEdit()}
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.issuingPoliceDepartment)}>   
                    <div className="row">
                        <div className="form-group col-12">
                            <PoliceDepartmentUI  {...this.bind(m => m.issuingPoliceDepartment)} />
                        </div>
                    </div>
                </FieldFormUI>
                {this.renderPersonOrEntityDataUIPreview()}
            </>
        );
    }

    renderPersonOrEntityDataUIEdit() {
        if (this.model.entityOrPerson == EntityOrPerson.Entity) {
            return (
                <>
                    <FieldFormUI title={ResourceHelpers.getResourceByProperty("applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesEntityData", this.model)} required >
                        <EntityDataUI {...this.bind(m => m.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesEntityData)} />
                        <div className="row">
                            <div className="form-group col-sm-6">
                                {this.labelFor(m => m.workPhone, null, attributesClassFormControlRequiredLabel)}
                                {this.textBoxFor(m => m.workPhone, attributesClassFormControlReqired)}
                            </div>
                        </div>
                    </FieldFormUI>
                    <DeclaredScopeOfCertificationDataUI {...this.bind(m => m.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesEntityData)} />
                    <FieldFormUI title={this.getResource("DOC_PBZN_AvailableCertifiedPersonnel_L")} required >
                        <CertifiedPersonelCollectionUI {...this.bind(x=>x.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesEntityData.availableCertifiedPersonnel)} />
                    </FieldFormUI>
                </>
            );
        }
        else if (this.model.entityOrPerson == EntityOrPerson.Person)
            return (
                <>
                    <fieldset className="fields-group">
                        <legend>
                            <h3 className="field-title">
                                {ResourceHelpers.getResourceByProperty("applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesPersonData", this.model)}
                            </h3>
                        </legend>
                        <PersonDataUI {...this.bind(m => m.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesPersonData)} />
                        <div className="row">
                            <div className="form-group col-sm-6">
                                {this.labelFor(m => m.workPhone, null, attributesClassFormControlRequiredLabel)}
                                {this.textBoxFor(m => m.workPhone, attributesClassFormControlReqired)}
                            </div>
                        </div>
                    </fieldset>
                    <CertificateToWorkWithFluorinatedGreenhouseGassesPersonDataUI {...this.bind(m => m.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesPersonData)} />
                </>
            );
    }

    renderPersonOrEntityDataUIPreview() {
        if (this.model.entityOrPerson == EntityOrPerson.Entity) {
            return (
                <>
                    <FieldFormUI title={ResourceHelpers.getResourceByProperty("applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesEntityData", this.model)} >
                        <EntityDataUI {...this.bind(m => m.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesEntityData)} />
                        <div className="row">
                            <div className="form-group col-sm-6">
                                {this.labelFor(m => m.workPhone, null, attributesClassFormControlLabel)}
                                {this.textDisplayFor(m => m.workPhone)}
                            </div>
                        </div>
                    </FieldFormUI>
                    <DeclaredScopeOfCertificationDataUI {...this.bind(m => m.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesEntityData)} />
                    <FieldFormUI title={this.getResource("DOC_PBZN_AvailableCertifiedPersonnel_L")} >
                        <CertifiedPersonelCollectionUI {...this.bind(m => m.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesEntityData.availableCertifiedPersonnel)} />
                    </FieldFormUI>
                </>
            )

        } else if (this.model.entityOrPerson == EntityOrPerson.Person)
            return (
                <>
                    <fieldset className="fields-group">
                        <legend>
                            <h3 className="field-title">
                                {ResourceHelpers.getResourceByProperty("applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesPersonData", this.model)}
                            </h3>
                        </legend>
                        <PersonDataUI {...this.bind(m => m.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesPersonData)} />
                        <div className="row">
                            <div className="form-group col-sm-6">
                                {this.labelFor(m => m.workPhone, null, attributesClassFormControlLabel)}
                                {this.textDisplayFor(m => m.workPhone)}
                            </div>
                        </div>
                    </fieldset>
                    <CertificateToWorkWithFluorinatedGreenhouseGassesPersonDataUI {...this.bind(m => m.applicationForIssuingOrRenewingCertificateToWorkWithFluorinatedGreenhouseGassesPersonData)} />
                </>
            );
    }
}