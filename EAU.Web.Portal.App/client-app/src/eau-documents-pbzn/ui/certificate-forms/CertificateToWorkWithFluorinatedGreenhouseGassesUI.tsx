import React from "react";
import { EAUBaseComponent, ResourceHelpers, Constants, TextEditorUI } from "eau-core";
import { BaseProps, ViewMode, RawHTML } from "cnsys-ui-react";
import { FieldFormUI, ElectronicServiceProviderBasicDataUI, ElectronicServiceApplicantUI, AISCaseURIUI } from "eau-documents";
import { CertificateToWorkWithFluorinatedGreenhouseGassesVM } from "../../models/ModelsAutoGenerated";
import { GraoAddressUI, DocumentURIUI, EkatteAddressUI, PoliceDepartmentUI } from "eau-documents/ui";
import { observable } from "mobx";
import { AuthorWithQualityVM, ElectronicServiceAuthorQualityType, PersonAndEntityChoiceType, EntityAddress } from "eau-documents/models";
import { CertifiedPersonelCollectionUI } from "../field-forms";

export class CertificateToWorkWithFluorinatedGreenhouseGassesUI extends EAUBaseComponent<BaseProps, CertificateToWorkWithFluorinatedGreenhouseGassesVM> {
    @observable isEntity: boolean;
    constructor(props: BaseProps) {
        super(props);

        //Bind       

        //Init
        this.isEntity = this.model.electronicServiceApplicant.recipientGroup.recipient.selectedChoiceType == PersonAndEntityChoiceType.Entity;

    }

    renderEdit(): JSX.Element {
        return (
            <>
                <FieldFormUI title={this.getResourceByProperty(m => m.electronicServiceProviderBasicData)}>
                    <ElectronicServiceProviderBasicDataUI {...this.bind(m => m.electronicServiceProviderBasicData)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.policeDepartment)}>
                    <PoliceDepartmentUI {...this.bind(m => m.policeDepartment, ViewMode.Display)} />
                </FieldFormUI>
                <ElectronicServiceApplicantUI {...this.bind(m => m.electronicServiceApplicant)} viewMode={ViewMode.Display} />
                <FieldFormUI title={this.getResource("DOC_PBZN_CertificateToWorkWithFluorinatedGreenhouseGasses_address_L")}>
                    {this.isEntity && this.model.entityData ?
                        <EkatteAddressUI {...this.bind(m => m.entityData.entityManagementAddress)} viewMode={ViewMode.Display} /> :
                        this.model.personData.permanentAddress ?
                            <GraoAddressUI {...this.bind(m => m.personData.permanentAddress)} viewMode={ViewMode.Display} />
                            : <GraoAddressUI {...this.bind(m => m.personData.currentAddress)} viewMode={ViewMode.Display} />
                    }
                </FieldFormUI>
                <FieldFormUI title={this.getResource("DOC_GL_CasefileData_L")}>
                    <div className="row">
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{this.getResource("GL_URI_CASE_L")}</h4>
                            <p className="field-text"><AISCaseURIUI {...this.bind(m => m.aisCaseURI)} /></p>
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.certificateToWorkWithFluorinatedGreenhouseGassesActivities)}>
                    <RawHTML rawHtmlText={this.model.certificateToWorkWithFluorinatedGreenhouseGassesActivities} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.certificateValidity)}>
                    {this.textDisplayFor(m => m.certificateValidity)}
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.certificateToWorkWithFluorinatedGreenhouseGassesGround)}>
                    <RawHTML rawHtmlText={this.model.certificateToWorkWithFluorinatedGreenhouseGassesGround} />
                </FieldFormUI>
                {this.isEntity && this.model.entityData && this.model.entityData.availableCertifiedPersonnel ?
                    <>
                        <FieldFormUI title={this.getResourceByProperty(m => m.entityData.availableCertifiedPersonnel)}>
                            <CertifiedPersonelCollectionUI {...this.bind(m => m.entityData.availableCertifiedPersonnel)} />
                        </FieldFormUI>
                        <FieldFormUI title={this.getResourceByProperty(m => m.certificateToWorkWithFluorinatedGreenhouseGassesPersonsGround)}>
                            <RawHTML rawHtmlText={this.model.certificateToWorkWithFluorinatedGreenhouseGassesPersonsGround} />
                        </FieldFormUI>
                    </>
                    :
                    null}
            </>
        )
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                {this.model.documentURI ?
                    <div className="row">
                        <div className="form-group col-12">
                            <p className="page-subtitle">
                                {this.getResource("GL_URI_L")} <DocumentURIUI {...this.bind(m => m.documentURI)} />
                            </p>
                            <p className="page-date">{this.getResource("GL_DATE_L")} {this.dateDisplayFor(this.model.documentReceiptOrSigningDate, Constants.DATE_FORMATS.date)}</p>
                        </div>
                    </div>
                    : null}
                <FieldFormUI title={this.getResourceByProperty(m => m.electronicServiceProviderBasicData)}>
                    <ElectronicServiceProviderBasicDataUI {...this.bind(m => m.electronicServiceProviderBasicData)} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.policeDepartment)}>
                    <PoliceDepartmentUI {...this.bind(m => m.policeDepartment, ViewMode.Display)} />
                </FieldFormUI>
                <ElectronicServiceApplicantUI {...this.bind(m => m.electronicServiceApplicant)} viewMode={ViewMode.Display} />
                <FieldFormUI title={this.getResource("DOC_PBZN_CertificateToWorkWithFluorinatedGreenhouseGasses_address_L")}>
                    {this.isEntity && this.model.entityData ?
                        <EkatteAddressUI {...this.bind(m => m.entityData.entityManagementAddress)} viewMode={ViewMode.Display} /> :
                        this.model.personData.permanentAddress ?
                            <GraoAddressUI {...this.bind(m => m.personData.permanentAddress)} viewMode={ViewMode.Display} />
                            : <GraoAddressUI {...this.bind(m => m.personData.currentAddress)} viewMode={ViewMode.Display} />
                    }
                </FieldFormUI>
                <FieldFormUI title={this.getResource("DOC_GL_CasefileData_L")}>
                    <div className="row">
                        <div className="form-group col-12">
                            <h4 className="form-control-label">{this.getResource("GL_URI_CASE_L")}</h4>
                            <p className="field-text"><AISCaseURIUI {...this.bind(m => m.aisCaseURI)} /></p>
                        </div>
                    </div>
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.certificateToWorkWithFluorinatedGreenhouseGassesActivities)}>
                    {this.propertyErrorsDispleyFor(m => m.certificateToWorkWithFluorinatedGreenhouseGassesActivities)}
                    <RawHTML rawHtmlText={this.model.certificateToWorkWithFluorinatedGreenhouseGassesActivities} />
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.certificateValidity)}>
                    {this.textDisplayFor(m => m.certificateValidity)}
                </FieldFormUI>
                <FieldFormUI title={this.getResourceByProperty(m => m.certificateToWorkWithFluorinatedGreenhouseGassesGround)}>
                    <RawHTML rawHtmlText={this.model.certificateToWorkWithFluorinatedGreenhouseGassesGround} />
                </FieldFormUI>
                {this.isEntity && this.model.entityData && this.model.entityData.availableCertifiedPersonnel ?
                    <>
                        <FieldFormUI title={this.getResourceByProperty(m => m.entityData.availableCertifiedPersonnel)}>
                            <CertifiedPersonelCollectionUI {...this.bind(m => m.entityData.availableCertifiedPersonnel)} />
                        </FieldFormUI>
                        <FieldFormUI title={this.getResourceByProperty(m => m.certificateToWorkWithFluorinatedGreenhouseGassesPersonsGround)}>
                            <RawHTML rawHtmlText={this.model.certificateToWorkWithFluorinatedGreenhouseGassesPersonsGround} />
                        </FieldFormUI>
                    </>
                    :
                    null}
            </>
        )
    }


}