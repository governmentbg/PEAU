import { EAUBaseValidator, ErrMsgCodesConstants, ResourceHelpers } from "eau-core";
import { DocumentFormValidationContext } from "eau-documents";
import { CertifiedPersonelVM } from "../models/ModelsAutoGenerated";

export class AppForIssOrRenewCertToWorkWithFluorGreenhouseGassesCertifiedPersonelVMValidator extends EAUBaseValidator<CertifiedPersonelVM, DocumentFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.personFirstName).notEmpty()
            .withMessage(ResourceHelpers.getErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, 'DOC_PBZN_CertifiedPersonel_FirstName_L'));

        this.ruleFor(m => m.personFirstName).match(/^[а-яА-Я]+([а-яА-Я '-]+[а-яА-Я]){0,1}$/)
            .withMessage(ResourceHelpers.getErrorMessage(ErrMsgCodesConstants.FieldCyrillicNameMustContainsSymbols, 'DOC_PBZN_CertifiedPersonel_FirstName_L'));

        this.ruleFor(m => m.personLastName).notEmpty()
            .withMessage(ResourceHelpers.getErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, 'DOC_PBZN_CertifiedPersonel_LastName_L'));

        this.ruleFor(m => m.personLastName).match(/^[а-яА-Я]+([а-яА-Я '-]+[а-яА-Я]){0,1}$/)
            .withMessage(ResourceHelpers.getErrorMessage(ErrMsgCodesConstants.FieldCyrillicNameMustContainsSymbols, 'DOC_PBZN_CertifiedPersonel_LastName_L'));

        this.ruleFor(m => m.certificateNumber).notEmpty()
            .withMessage(ResourceHelpers.getErrorMessage(ErrMsgCodesConstants.DefaultNotEmptyErrorMessage, 'DOC_PBZN_CertifiedPersonel_CertificateNumber_L'));
    }
}