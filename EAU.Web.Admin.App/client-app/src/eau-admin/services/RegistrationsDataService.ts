import { EAUBaseDataService } from 'eau-core';
import { RegistrationData, RegistrationDataSearchCriteria } from '../models/ModelsAutoGenerated';

export class RegistrationsDataService extends EAUBaseDataService {

    protected baseUrl(): string {
        return super.baseUrl() + "RegistrationsData";
    }

    public searchPayments(criteria: RegistrationDataSearchCriteria): Promise<RegistrationData[]> {

        return this.doSearch(criteria, () => this.getRegistrationsData(), (data, criteria) => {
            return data.filter(d => !criteria || /*!criteria.registrationDataIDs || criteria.registrationDataIDs.length == 0 ||*/ d.type == criteria.type);
        })
    }

    getPaymentById(paymentID: number): Promise<RegistrationData> {
        return this.getRegistrationsData().then(payments => {
            let payment = payments.filter(s => s.registrationDataID == paymentID);

            if (payment && payment.length > 0) {
                return payment[0];
            }
            return null;
        })
    }

    getPaymentByType(type: number): Promise<RegistrationData> {
        return this.getRegistrationsData().then(payments => {
            let payment = payments.filter(s => s.type == type);

            if (payment && payment.length > 0) {
                return payment[0];
            }
            return null;
        })
    }

    public updateRegistrationData(registrationData: RegistrationData): any {
        return this.put<RegistrationData>(`${registrationData.registrationDataID}`, RegistrationData, registrationData)
            .then((result: RegistrationData) => { return result });

    }

    addRegistrationData(registrationData: RegistrationData): Promise<RegistrationData> {
        return this.post<RegistrationData>(``, RegistrationData, registrationData).then((registrationData) => {
            return registrationData;
        });
    }

    public deleteRegistrationData(registrationDataID: number): Promise<void> {
        return this.delete<void>(`${registrationDataID}`, RegistrationData, null);
    }

    public getRegistrationsData(): Promise<RegistrationData[]> {

        return this.get<RegistrationData[]>('', RegistrationData);
    }
}