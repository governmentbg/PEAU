import { BasePagedSearchCriteria } from 'cnsys-core';
import {PageSearchCriteria, Page, CmsDataService as BaseCmsDataService, Language} from 'eau-core';
import {LabelSearchCriteria, ServiceGroupSearchCriteria} from '../models/ModelsAutoGenerated';
import { ServiceGroupI18nVM } from 'eau-admin/models/ServiceGroupI18nVM';
import { PageI18nVM } from 'eau-admin/models/PageI18nVM';

export class CmsDataService extends BaseCmsDataService {

    public searchCmsPages(criteria: PageSearchCriteria, lang?:string): Promise<Page[]> {
      
        let forceTranslated = false;

        if (lang && lang != "bg")
            forceTranslated = true;

        return this.doSearch(criteria, () => this.getPages(lang, forceTranslated), (data, criteria) => {
            return data.filter(d => !criteria || !criteria.pageIDs || criteria.pageIDs.length == 0 || criteria.pageIDs.indexOf(d.pageID) >= 0);
        })
    }

    public updateCmsPage(page: Page): any {
        return this.put<Page>(`Pages/${page.pageID}`, Page, page)
            .then((result: Page) => {return result});

    }

    public updateI18nPage(page:PageI18nVM) {
        return this.put<PageI18nVM>(`Pages/${page.languageCode}/${page.pageID}`, PageI18nVM, page);
    }

    public addI18nPage(page:PageI18nVM) {
        
        page.title = page.title ? page.title : "";
        page.content = page.content ? page.content : "";

        return this.post<PageI18nVM>(`Pages/${page.languageCode}/${page.pageID}`, PageI18nVM, page)
            .then(() => page.isTranslated = true);
    }

    /**
     * Взима предефинирана страница
     * @param PageID 
     */
    public getPageById(pageID:number, lang) : Promise<Page>{
        
        let forceTranslated = false;

        if (lang && lang != "bg")
            forceTranslated = true;

        return this.getPages(lang, forceTranslated).then(pages => {
            let page = pages.filter(s => s.pageID == pageID);

            if(page && page.length > 0) {
                return page[0];
            }
            return null;
        })
     }
} 