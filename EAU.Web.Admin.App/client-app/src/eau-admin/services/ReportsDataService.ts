import { EAUBaseDataService } from 'eau-core';
import { UrlHelper } from 'cnsys-core';
import { NotaryInterestsForPersonOrVehicleReportData, NotaryInterestsForPersonOrVehicleSearchCriteria, PaymentsObligationsData, PaymentsObligationsSearchCriteria } from '../models/ModelsAutoGenerated';

export class ReportsDataService extends EAUBaseDataService {

    protected baseUrl(): string {
        return super.baseUrl() + "Reports";
    }

    public getPaymentsObligations(searchCriteria: PaymentsObligationsSearchCriteria): Promise<PaymentsObligationsData[]> {
        return this.get<PaymentsObligationsData[]>(`GetPaymentsObligations`, PaymentsObligationsData, searchCriteria).then(function (result: PaymentsObligationsData[]) {
            searchCriteria.count = this.jqXHR.getResponseHeader('count') ? this.jqXHR.getResponseHeader('count') : 0;
            return result;
        });
    }

    public getNotaryInterestsForPersonOrVehicle(searchCriteria: NotaryInterestsForPersonOrVehicleSearchCriteria): Promise<NotaryInterestsForPersonOrVehicleReportData[]> {
        return this.get<NotaryInterestsForPersonOrVehicleReportData[]>(`GetNotaryInterestsForPersonOrVehicle`, NotaryInterestsForPersonOrVehicleReportData, searchCriteria)
            .then(function (result: NotaryInterestsForPersonOrVehicleReportData[]) {
                searchCriteria.count = this.jqXHR.getResponseHeader('count') ? this.jqXHR.getResponseHeader('count') : 0;
                return result;
            });
    }


    public getNotaryInterestsForPersonOrVehicleAsPDFDownloadURL(searchCriteria: NotaryInterestsForPersonOrVehicleSearchCriteria): string {
        const data = UrlHelper.createUrlQueryByObject(searchCriteria);

        return `${this.baseUrl()}/GetNotaryInterestsForPersonOrVehicleToPDF?${$.param(data)}`;
    }
}