import { EAUBaseDataService, UserSearchCriteria, UserVM } from 'eau-core';
import { InternalUserVM } from '../models/InternalUserModels';
import { LDAPUser, LDAPUserSearchCritaria } from '../models/ModelsAutoGenerated';

export class UsersDataService extends EAUBaseDataService {

    protected baseUrl(): string {
        return super.baseUrl() + "Users";
    }

    public getLDAPUsers(searchCriteria: LDAPUserSearchCritaria): Promise<LDAPUser[]> {
        return this.doSearch(searchCriteria, () => this.get<LDAPUser[]>(`GetLDAPUsers`, LDAPUser, searchCriteria), (data, criteria) => data);
    }

    public getUsers(searchCriteria: UserSearchCriteria): Promise<UserVM[]> {
        return this.doSearch(searchCriteria, () => this.get<UserVM[]>(`GetUsersProfiles`, UserVM, searchCriteria), (data, criteria) => data)
    }

    public internalUserRegister(model: InternalUserVM): Promise<InternalUserVM> {
        return this.post<InternalUserVM>("/InternalUserRegister", InternalUserVM, model);
    }

    public updateUserProfile(model: InternalUserVM): Promise<void> {
        return this.put<void>(`${model.userID}`, InternalUserVM, model);
    }

    public getLoginSession(loginSessionId: string): Promise<any> {
        return this.get<any>(`/LognSession/${loginSessionId}`, null);
    }
}