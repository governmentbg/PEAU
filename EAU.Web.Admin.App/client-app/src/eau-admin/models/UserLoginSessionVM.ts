import { BaseDataModel, TypeSystem } from 'cnsys-core'
import { observable } from 'mobx'
import moment from 'moment'
import { moduleContext } from '../ModuleContext'
import { AuthenticationTypes } from './ModelsAutoGenerated'
import { UserVM } from './UserVM'
import { CertificateVM } from './CertificateVM'

@TypeSystem.typeDecorator('UserLoginSessionVM', moduleContext.moduleName)
export class UserLoginSessionVM extends BaseDataModel {

    //#region loginSessionID

    @observable private _loginSessionID: string = null;

    @TypeSystem.propertyDecorator('string')
    public set loginSessionID(val: string) {
        this._loginSessionID = val;
    }

    public get loginSessionID(): string {
        return this._loginSessionID;
    }

    //#endregion loginSessionID 

    //#region userSessionID

    @observable private _userSessionID: string = null;

    @TypeSystem.propertyDecorator('string')
    public set userSessionID(val: string) {
        this._userSessionID = val;
    }

    public get userSessionID(): string {
        return this._userSessionID;
    }

    //#endregion userSessionID 

    //#region userID

    @observable private _userID: number = null;

    @TypeSystem.propertyDecorator('number')
    public set userID(val: number) {
        this._userID = val;
    }

    public get userID(): number {
        return this._userID;
    }

    //#endregion userID 

    //#region loginDateTime

    @observable private _loginDateTime: moment.Moment = null;

    @TypeSystem.propertyDecorator('moment')
    public set loginDateTime(val: moment.Moment) {
        this._loginDateTime = val;
    }

    public get loginDateTime(): moment.Moment {
        return this._loginDateTime;
    }

    //#endregion loginDateTime 

    //#region logoutDateTime

    @observable private _logoutDateTime: moment.Moment = null;

    @TypeSystem.propertyDecorator('moment')
    public set logoutDateTime(val: moment.Moment) {
        this._logoutDateTime = val;
    }

    public get logoutDateTime(): moment.Moment {
        return this._logoutDateTime;
    }

    //#endregion logoutDateTime 

    //#region ipAddress

    @observable private _ipAddress: string = null;

    @TypeSystem.propertyDecorator('string')
    public set ipAddress(val: string) {
        this._ipAddress = val;
    }

    public get ipAddress(): string {
        return this._ipAddress;
    }

    //#endregion ipAddress 

    //#region authenticationType

    @observable private _authenticationType: AuthenticationTypes = null;

    @TypeSystem.propertyDecorator(AuthenticationTypes)
    public set authenticationType(val: AuthenticationTypes) {
        this._authenticationType = val;
    }

    public get authenticationType(): AuthenticationTypes {
        return this._authenticationType;
    }

    //#endregion authenticationType 

    //#region certificateID

    @observable private _certificateID: number = null;

    @TypeSystem.propertyDecorator('number')
    public set certificateID(val: number) {
        this._certificateID = val;
    }

    public get certificateID(): number {
        return this._certificateID;
    }

    //#endregion certificateID 

    //#region userIdentifier

    @observable private _userIdentifier: string = null;

    @TypeSystem.propertyDecorator('string')
    public set userIdentifier(val: string) {
        this._userIdentifier = val;
    }

    public get userIdentifier(): string {
        return this._userIdentifier;
    }

    //#endregion userIdentifier 

    //#region user

    @observable private _user: UserVM = null;

    @TypeSystem.propertyDecorator(moduleContext.moduleName + '.' + 'UserVM')
    public set user(val: UserVM) {
        this._user = val;
    }

    public get user(): UserVM {
        return this._user;
    }

    //#endregion user 

    //#region certificate

    @observable private _certificate: CertificateVM = null;

    @TypeSystem.propertyDecorator(moduleContext.moduleName + '.' + 'CertificateVM')
    public set certificate(val: CertificateVM) {
        this._certificate = val;
    }

    public get certificate(): CertificateVM {
        return this._certificate;
    }

    //#endregion certificate 

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);
    }
} 