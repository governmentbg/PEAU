import { ObjectHelper } from "cnsys-core";
import { EAUBaseValidator, resourceManager, UserSearchCriteria } from "eau-core";
import { InternalUserVM } from "../models/InternalUserModels";
import { LDAPUserSearchCritaria } from "../models/ModelsAutoGenerated";

export class LDAPUserSearchValidator extends EAUBaseValidator<LDAPUserSearchCritaria, any>{

    constructor() {
        super();

        this.ruleFor(x => x.username).length(3).withMessage(resourceManager.getResourceByKey("GL_LDAP_SEARCH_CRITERIA_MINIMUM_E"));
        this.ruleFor(x => x.firstName).length(3).withMessage(resourceManager.getResourceByKey("GL_LDAP_SEARCH_CRITERIA_MINIMUM_E"));
        this.ruleFor(x => x.lastName).length(3).withMessage(resourceManager.getResourceByKey("GL_LDAP_SEARCH_CRITERIA_MINIMUM_E"));
    }

    public validate(obj: LDAPUserSearchCritaria): boolean {

        let isValid = super.validate(obj);

        if (ObjectHelper.isStringNullOrEmpty(obj.username) && ObjectHelper.isStringNullOrEmpty(obj.firstName) && ObjectHelper.isStringNullOrEmpty(obj.lastName)) {

            obj.addError(resourceManager.getResourceByKey("GL_SEARCH_CRITERIA_E"));
            isValid = false;
        }

        return isValid;
    }
}

export class InternalUserRegisterValidator extends EAUBaseValidator<InternalUserVM, any> {

    constructor() {
        super();

        this.ruleFor(x => x.username).notEmpty().withMessage(resourceManager.getResourceByKey("GL_INPUT_FIELD_MUST_E"));
        this.ruleFor(x => x.email).notEmpty().withMessage(resourceManager.getResourceByKey("GL_INPUT_FIELD_MUST_E"));
        this.ruleFor(x => x.email).emailAddress().withMessage(resourceManager.getResourceByKey("GL_INPUT_VALID_EMAIL_E"));
    }

    public validate(obj: InternalUserVM): boolean {

        let isValid = super.validate(obj);

        return isValid;
    }
}

export class InternalUsersSearchValidator extends EAUBaseValidator<UserSearchCriteria, any> {

    constructor() {
        super();

        this.ruleFor(x => x.email).emailAddress().withMessage(resourceManager.getResourceByKey("GL_INPUT_VALID_EMAIL_E"));
    }

    public validate(obj: UserSearchCriteria): boolean {

        let isValid = super.validate(obj);

        return isValid;
    }
}

export class InternalUsersEditValidator extends EAUBaseValidator<InternalUserVM, any> {

    constructor() {
        super();

        this.ruleFor(x => x.email).notEmpty().withMessage(resourceManager.getResourceByKey("GL_INPUT_FIELD_MUST_E"));
        this.ruleFor(x => x.email).emailAddress().withMessage(resourceManager.getResourceByKey("GL_INPUT_VALID_EMAIL_E"));
    }

    public validate(obj: InternalUserVM): boolean {

        let isValid = super.validate(obj);

        return isValid;
    }
}