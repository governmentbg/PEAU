import { AsyncUIProps, BaseProps, withAsyncFrame } from "cnsys-ui-react";
import { EAUBaseComponent, ValidationSummary, ValidationSummaryErrors, ValidationSummaryStrategy } from "eau-core";
import { action } from "mobx";
import { observer } from "mobx-react";
import React from "react";
import { LabelSearchCriteria } from "../../../models/ModelsAutoGenerated";
import CardFooterUI from "../../common/CardFooterUI";

interface LabelTranslationsSearchFormUIProps extends BaseProps, AsyncUIProps {
    searchLabelsFunc
    showLabelsWithoutTranslationFunc
}

@observer class LabelTranslationsSearchFormUIImpl extends EAUBaseComponent<LabelTranslationsSearchFormUIProps, LabelSearchCriteria> {

    constructor(props: LabelTranslationsSearchFormUIProps) {
        super(props);

        this.search = this.search.bind(this);
        this.clear = this.clear.bind(this);
        this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);
    }

    render() {
        return (<>
            <div className="card-header">
                <h3>{this.getResource("GL_ADMIN_LABEL_SEARCH_TITLE_L")}

                </h3>
            </div>
            <div id="collapsable-content" className="collapse show">
                <div className="card-body">
                    <ValidationSummaryErrors asyncErrors={this.props.asyncErrors} />
                    <div className="row">
                        <div className="form-group col-sm-12 col-md-6 col-lg-6 col-xl-4">
                            {this.labelFor(m => m.code, "GL_CODE_L")}
                            {this.textBoxFor(m => m.code)}
                        </div>
                        <div className="form-group col-sm-12 col-md-6 col-lg-6 col-xl-4">
                            {this.labelFor(m => m.value, "GL_TEXT_BG_L")}
                            {this.textBoxFor(m => m.value)}
                        </div>
                        <div className="form-group col-md-4  align-bottom">
                            <label className="control-label"> </label>
                            <div className="custom-control custom-checkbox">
                                <input className="custom-control-input" name="withoutTranslation" id="without-translation" value="1" type="checkbox" onChange={this.handleCheckBoxChange} />
                                <label className="custom-control-label" htmlFor="without-translation">{this.getResource("GL_LABELS_WITHOUT_TRANSLATION__L")}</label>
                            </div>
                        </div>
                    </div>
                </div>
                <CardFooterUI onSearch={this.search} onClear={this.clear} />
            </div>
            </>);
    }

    private search() {
        this.props.searchLabelsFunc(this.model);
    }

    private handleCheckBoxChange(event: any) {
        if (event.target.checked == true)
            this.props.showLabelsWithoutTranslationFunc(true);
        else
            this.props.showLabelsWithoutTranslationFunc(false);
    }

    @action private clear() {
        this.model.code = "";
        this.model.value = "";

        this.search();
    }
}

export const LabelTranslationsSearchFormUI = withAsyncFrame(LabelTranslationsSearchFormUIImpl, false);